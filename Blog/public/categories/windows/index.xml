<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on The R Blog</title>
    <link>https://developer.r-project.org/Blog/public/categories/windows/</link>
    <description>Recent content in Windows on The R Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Apr 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://developer.r-project.org/Blog/public/categories/windows/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Improved Multi-byte Support in RTerm</title>
      <link>https://developer.r-project.org/Blog/public/2021/04/17/improved-multi-byte-support-in-rterm/</link>
      <pubDate>Sat, 17 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://developer.r-project.org/Blog/public/2021/04/17/improved-multi-byte-support-in-rterm/</guid>
      <description>Support for multi-byte characters and hence non-European languages in RTerm, the console-based front-end to R on Windows, has been improved. It is now possible to edit text including multi-byte and multi-width characters supported by the current locale, so that e.g.Â Japanese R users can edit a Japanese text. To appear in R 4.1.
This is a by-product of fixing RTerm to support all Unicode characters when running in UTF-8, which is already possible in experimental UCRT builds of R-devel.</description>
    </item>
    
    <item>
      <title>Virtual Windows machine for checking R packages</title>
      <link>https://developer.r-project.org/Blog/public/2021/03/18/virtual-windows-machine-for-checking-r-packages/</link>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://developer.r-project.org/Blog/public/2021/03/18/virtual-windows-machine-for-checking-r-packages/</guid>
      <description>Microsoft provides a free Windows 10 virtual machine for testing. Package maintainers working on Linux and MacOS can use it to test their packages on Windows. See instructions on how to set up the machine automatically for checking R packages.
The set up provides SSH access with bash, so that users can perform most of the tasks from their preferred terminal emulator. Command line tools needed to build R and many R packages from source are pre-installed.</description>
    </item>
    
    <item>
      <title>Windows/UTF-8 Toolchain and CRAN Package Checks</title>
      <link>https://developer.r-project.org/Blog/public/2021/03/12/windows/utf-8-toolchain-and-cran-package-checks/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://developer.r-project.org/Blog/public/2021/03/12/windows/utf-8-toolchain-and-cran-package-checks/</guid>
      <description>A new, experimental, build of R for Windows is available, its main aim being to support the UTF-8 encoding and especially non-European languages. Check results for CRAN packages are now available on their CRAN results pages. Please help by reviewing these for your package(s) and if a Windows user by trying the new build, particularly if you use a language written in a non-Latin script.
The new build can be downloaded from [2] and instructions are at [1].</description>
    </item>
    
    <item>
      <title>Windows/UTF-8 Build of R and CRAN Packages</title>
      <link>https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://developer.r-project.org/Blog/public/2020/07/30/windows/utf-8-build-of-r-and-cran-packages/</guid>
      <description>R-devel-win.exe is an experimental installer of R, set up to download experimental binary builds of CRAN packages. It sets UTF-8 as the current default encoding on Windows (Windows 10 November 2019 release or newer). 92% of CRAN packages are supported. Intended as a demonstration of this option to support Unicode characters in R on Windows, not for production use.
To play with this version of R, start cmd.exe, run chcp 65001 (to set UTF-8 code page), go to Properties/Font/Font and select NSimFun (a font with glyphs needed for this example), go to C:\Program Files\R\R-devel\bin (default installation directory of the demo), run R.</description>
    </item>
    
    <item>
      <title>UTF-8 Support on Windows</title>
      <link>https://developer.r-project.org/Blog/public/2020/05/02/utf-8-support-on-windows/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://developer.r-project.org/Blog/public/2020/05/02/utf-8-support-on-windows/</guid>
      <description>R internally allows strings to be represented in the current native encoding, in UTF-8 and in Latin 1. When interacting with the operating system or external libraries, all these representations have to be converted to native encoding. On Linux and macOS today this is not a problem, because the native encoding is UTF-8, so all Unicode characters are supported. On Windows, the native encoding cannot be UTF-8 nor any other that could represent all Unicode characters.</description>
    </item>
    
  </channel>
</rss>