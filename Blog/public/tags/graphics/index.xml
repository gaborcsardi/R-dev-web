<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>graphics on The R Blog</title>
    <link>https://developer.r-project.org/Blog/public/tags/graphics/</link>
    <description>Recent content in graphics on The R Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://developer.r-project.org/Blog/public/tags/graphics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>New Features in the R Graphics Engine</title>
      <link>https://developer.r-project.org/Blog/public/2020/07/15/new-features-in-the-r-graphics-engine/</link>
      <pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://developer.r-project.org/Blog/public/2020/07/15/new-features-in-the-r-graphics-engine/</guid>
      <description>Support for gradient fills, pattern fills, clipping paths and masks has been added to the R graphics engine (in the development version of R, which will probably become R version 4.1.0).
An R-level interface for these new features has been added to the ‘grid’ graphics package.
library(grid) For example, the following code fills a circle with a linear gradient.
grid.circle(gp=gpar(col=NA, fill=linearGradient())) The next code fills a rectangle with a radial gradient.</description>
    </item>
    
    <item>
      <title>Improvements to Clipping in the R Graphics Engine</title>
      <link>https://developer.r-project.org/Blog/public/2020/06/08/improvements-to-clipping-in-the-r-graphics-engine/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://developer.r-project.org/Blog/public/2020/06/08/improvements-to-clipping-in-the-r-graphics-engine/</guid>
      <description>The R graphics engine performs some clipping of output regardless of whether the graphics device it is sending output to can perform clipping itself. For example, output that is sent to the postscript() device, which can do its own clipping, is still clipped by the graphics engine to the edges of the device.
This is useful for devices that cannot clip, e.g., the xfig() device, and was historically useful as protection against very large values being sent to a device.</description>
    </item>
    
  </channel>
</rss>