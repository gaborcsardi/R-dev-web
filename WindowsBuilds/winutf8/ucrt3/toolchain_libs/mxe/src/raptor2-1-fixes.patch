diff -Nru raptor2-2.0.16-orig/src/sort_r.h raptor2-2.0.16-patched/src/sort_r.h
--- raptor2-2.0.16-orig/src/sort_r.h	2017-07-01 16:53:27.000000000 -0400
+++ raptor2-2.0.16-patched/src/sort_r.h	2023-06-29 03:48:15.580353980 -0400
@@ -27,7 +27,7 @@
      defined AMIGA)
 #  define _SORT_R_BSD
 #elif (defined _GNU_SOURCE || defined __gnu_hurd__ || defined __GNU__ || \
-       defined __linux__ || defined __MINGW32__ || defined __GLIBC__ || \
+       defined __linux__ || /* defined __MINGW32__ || */ defined __GLIBC__ || \
        defined __CYGWIN__)
 #  define _SORT_R_LINUX
 #elif (defined _WIN32 || defined _WIN64 || defined __WINDOWS__)
@@ -39,7 +39,7 @@
 #if (defined NESTED_QSORT && NESTED_QSORT == 0)
 #  undef NESTED_QSORT
 #elif (!defined NESTED_QSORT && \
-       defined __GLIBC__ && __GLIBC__ == 2 && __GLIBC_MINOR__ < 8)
+       defined __GLIBC__ && __GLIBC__ == 2 && __GLIBC_MINOR__ < 8 && !defined __clang__)
 /* no qsort_r in glibc before 2.8 */
 #  define NESTED_QSORT
 #endif
@@ -61,6 +61,18 @@
 
 #else /* !NESTED_QSORT */
 
+  struct sort_r_data
+  {
+    void *arg;
+    int (*compar)(const void *_a, const void *_b, void *_arg);
+  };
+
+  static inline int sort_r_arg_swap(void *s, const void *a, const void *b)
+  {
+    struct sort_r_data *ss = (struct sort_r_data*)s;
+    return (ss->compar)(a, b, ss->arg);
+  }
+
   /* Declare structs and functions */
   #if defined _SORT_R_BSD
 
@@ -68,18 +80,6 @@
     extern void qsort_r(void *base, size_t nel, size_t width, void *thunk,
                         int (*compar)(void *_thunk, const void *_a, const void *_b));
 
-    struct sort_r_data
-    {
-      void *arg;
-      int (*compar)(const void *_a, const void *_b, void *_arg);
-    };
-
-    static inline int sort_r_arg_swap(void *s, const void *a, const void *b)
-    {
-      struct sort_r_data *ss = (struct sort_r_data*)s;
-      return (ss->compar)(a, b, ss->arg);
-    }
-
   #elif defined _SORT_R_LINUX
 
     typedef int(* __compar_d_fn_t)(const void *, const void *, void *);
