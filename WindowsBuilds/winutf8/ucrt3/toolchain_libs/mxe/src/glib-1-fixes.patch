diff -Nru glib-2.75.0-orig/gio/giomodule.c glib-2.75.0-patched/gio/giomodule.c
--- glib-2.75.0-orig/gio/giomodule.c	2022-11-10 04:18:47.000000000 -0500
+++ glib-2.75.0-patched/gio/giomodule.c	2022-12-13 07:10:02.796284428 -0500
@@ -58,6 +58,9 @@
 #ifdef G_OS_WIN32
 #include "gregistrysettingsbackend.h"
 #include "giowin32-priv.h"
+#ifndef DLL_EXPORT
+#include <glib/gconstructor.h>
+#endif
 #endif
 #include <glib/gstdio.h>
 
diff -Nru glib-2.75.0-orig/gio/meson.build glib-2.75.0-patched/gio/meson.build
--- glib-2.75.0-orig/gio/meson.build	2022-11-10 04:18:47.000000000 -0500
+++ glib-2.75.0-patched/gio/meson.build	2022-12-13 07:55:27.873426208 -0500
@@ -876,11 +876,19 @@
   ],
 )
 
+# Link against libuuid to prevent linker error in certain cases
+windows_ldflags = []
+
+if host_system == 'windows'
+  windows_ldflags += ['-luuid']
+endif
+
 pkg.generate(libgio,
+  libraries_private : [windows_ldflags],
   requires : ['glib-2.0', 'gobject-2.0'],
   variables : ['datadir=' + join_paths('${prefix}', get_option('datadir')),
                'schemasdir=' + join_paths('${datadir}', schemas_subdir),
-               'bindir=' + join_paths('${prefix}', get_option('bindir')),
+               'bindir=' + join_paths('${prefix}', get_option('runtime_bindir')),
                'giomoduledir=' + pkgconfig_giomodulesdir,
                'gio=' + join_paths('${bindir}', 'gio'),
                'gio_querymodules=@0@'.format(pkgconfig_multiarch_bindir / 'gio-querymodules'),
diff -Nru glib-2.75.0-orig/glib/meson.build glib-2.75.0-patched/glib/meson.build
--- glib-2.75.0-orig/glib/meson.build	2022-11-10 04:18:47.000000000 -0500
+++ glib-2.75.0-patched/glib/meson.build	2022-12-13 07:10:02.800284399 -0500
@@ -438,7 +438,7 @@
   libraries_private : [win32_ldflags],
   subdirs : ['glib-2.0'],
   extra_cflags : ['-I${libdir}/glib-2.0/include'] + win32_cflags,
-  variables : ['bindir=' + join_paths('${prefix}', get_option('bindir')),
+  variables : ['bindir=' + join_paths('${prefix}', get_option('runtime_bindir')),
                'glib_genmarshal=' + join_paths('${bindir}', 'glib-genmarshal'),
                'gobject_query=' + join_paths('${bindir}', 'gobject-query'),
                'glib_mkenums=' + join_paths('${bindir}', 'glib-mkenums')],
diff -Nru glib-2.75.0-orig/m4macros/glib-gettext.m4 glib-2.75.0-patched/m4macros/glib-gettext.m4
--- glib-2.75.0-orig/m4macros/glib-gettext.m4	2022-11-10 04:18:47.000000000 -0500
+++ glib-2.75.0-patched/m4macros/glib-gettext.m4	2022-12-13 07:10:02.796284428 -0500
@@ -39,8 +39,8 @@
 dnl try to pull in the installed version of these macros
 dnl when running aclocal in the glib directory.
 dnl
-m4_copy([AC_DEFUN],[glib_DEFUN])
-m4_copy([AC_REQUIRE],[glib_REQUIRE])
+m4_copy_force([AC_DEFUN],[glib_DEFUN])
+m4_copy_force([AC_REQUIRE],[glib_REQUIRE])
 dnl
 dnl At the end, if we're not within glib, we'll define the public
 dnl definitions in terms of our private definitions.
diff -Nru glib-2.75.0-orig/meson.build glib-2.75.0-patched/meson.build
--- glib-2.75.0-orig/meson.build	2022-11-10 04:18:47.000000000 -0500
+++ glib-2.75.0-patched/meson.build	2022-12-13 09:15:50.009707141 -0500
@@ -2070,14 +2070,23 @@
   #
   # Meson's builtin dependency lookup as of 0.60.0 doesn't check for
   # pthread, so we do this manually here.
-  if cc.has_function('ngettext', dependencies : libintl)
-    libintl_deps += [libintl]
+  if host_system == 'windows'
+    libintl_iconv = cc.find_library('iconv', required : false)
+    if libintl_iconv.found()
+      libintl_deps += [libintl, libintl_iconv]
+    else
+      libintl_deps = [libintl]
+    endif
   else
-    libintl_pthread = cc.find_library('pthread', required : false)
-    if libintl_pthread.found() and cc.has_function('ngettext', dependencies : [libintl, libintl_pthread])
-      libintl_deps += [libintl, libintl_pthread]
+    if cc.has_function('ngettext', dependencies : libintl)
+      libintl_deps += [libintl]
     else
-      libintl = disabler()
+      libintl_pthread = cc.find_library('pthread', required : false)
+      if libintl_pthread.found() and cc.has_function('ngettext', dependencies : [libintl, libintl_pthread])
+        libintl_deps += [libintl, libintl_pthread]
+      else
+       libintl = disabler()
+      endif
     endif
   endif
 endif
diff -Nru glib-2.75.0-orig/meson_options.txt glib-2.75.0-patched/meson_options.txt
--- glib-2.75.0-orig/meson_options.txt	2022-11-10 04:18:47.000000000 -0500
+++ glib-2.75.0-patched/meson_options.txt	2022-12-13 07:12:47.559082251 -0500
@@ -122,3 +122,8 @@
        type : 'boolean',
        value : false,
        description : 'Install some helper executables in per-architecture locations')
+
+option('runtime_bindir',
+       type : 'string',
+       value : 'bin',
+       description : 'Alternate bindir value, useful for cross-compilation,')
\ No newline at end of file
