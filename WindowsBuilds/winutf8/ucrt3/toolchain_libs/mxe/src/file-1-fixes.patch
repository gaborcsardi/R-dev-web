diff -Nru file-5.44-orig/src/compress.c file-5.44-patched/src/compress.c
--- file-5.44-orig/src/compress.c	2022-12-26 13:00:48.000000000 -0500
+++ file-5.44-patched/src/compress.c	2023-03-13 14:38:09.882435466 -0400
@@ -1088,9 +1088,15 @@
 	 * and both must have large outputs. Thus it happens not that often).
 	 * To avoid this, be sure to create pipes with O_CLOEXEC.
 	 */
+#ifdef WIN32
+        if ((fd == -1 && pipe(fdp[STDIN_FILENO]) == -1) ||
+           pipe(fdp[STDOUT_FILENO]) == -1 || pipe(fdp[STDERR_FILENO]) == -1) {
+
+#else
 	if ((fd == -1 && file_pipe_closexec(fdp[STDIN_FILENO]) == -1) ||
 	    file_pipe_closexec(fdp[STDOUT_FILENO]) == -1 ||
 	    file_pipe_closexec(fdp[STDERR_FILENO]) == -1) {
+#endif
 		closep(fdp[STDIN_FILENO]);
 		closep(fdp[STDOUT_FILENO]);
 		return makeerror(newch, n, "Cannot create pipe, %s",
diff -Nru file-5.44-orig/src/file.h file-5.44-patched/src/file.h
--- file-5.44-orig/src/file.h	2022-12-26 13:00:48.000000000 -0500
+++ file-5.44-patched/src/file.h	2023-03-13 14:39:02.514472428 -0400
@@ -584,8 +584,10 @@
 file_protected int file_os2_apptype(struct magic_set *, const char *, const void *,
     size_t);
 #endif /* __EMX__ */
+#ifndef WIN32
 file_protected int file_pipe_closexec(int *);
 file_protected int file_clear_closexec(int);
+#endif
 file_protected char *file_strtrim(char *);
 
 file_protected void buffer_init(struct buffer *, int, const struct stat *,
diff -Nru file-5.44-orig/src/funcs.c file-5.44-patched/src/funcs.c
--- file-5.44-orig/src/funcs.c	2022-12-26 13:00:48.000000000 -0500
+++ file-5.44-patched/src/funcs.c	2023-03-13 14:40:01.346508019 -0400
@@ -875,6 +875,7 @@
 #endif
 }
 
+#ifndef WIN32
 file_protected int
 file_pipe_closexec(int *fds)
 {
@@ -899,6 +900,7 @@
 	return 0;
 #endif
 }
+#endif
 
 file_protected char *
 file_strtrim(char *str)
diff -Nru file-5.44-orig/src/magic.c file-5.44-patched/src/magic.c
--- file-5.44-orig/src/magic.c	2022-12-26 13:00:48.000000000 -0500
+++ file-5.44-patched/src/magic.c	2023-03-13 14:40:36.426526628 -0400
@@ -478,8 +478,10 @@
 			goto done;
 		}
 #if O_CLOEXEC == 0 && defined(F_SETFD)
+#ifndef WIN32
 		(void)fcntl(fd, F_SETFD, FD_CLOEXEC);
 #endif
+#endif
 	}
 
 	if (fd != -1) {
