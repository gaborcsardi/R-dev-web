diff -Nru postgresql-13.4-orig/src/interfaces/libpq/fe-connect.c postgresql-13.4-patched/src/interfaces/libpq/fe-connect.c
--- postgresql-13.4-orig/src/interfaces/libpq/fe-connect.c	2021-08-09 16:49:05.000000000 -0400
+++ postgresql-13.4-patched/src/interfaces/libpq/fe-connect.c	2021-09-09 08:09:16.421112706 -0400
@@ -2692,11 +2692,14 @@
 					if (connect(conn->sock, addr_cur->ai_addr,
 								addr_cur->ai_addrlen) < 0)
 					{
+#ifndef WIN32
 						if (SOCK_ERRNO == EINPROGRESS ||
-#ifdef WIN32
-							SOCK_ERRNO == EWOULDBLOCK ||
-#endif
 							SOCK_ERRNO == EINTR)
+#else
+						if (SOCK_ERRNO == WSAEINPROGRESS ||
+							SOCK_ERRNO == WSAEWOULDBLOCK ||
+							SOCK_ERRNO == WSAEINTR)
+#endif
 						{
 							/*
 							 * This is fine - we're in non-blocking mode, and
@@ -4368,7 +4371,11 @@
 	if (connect(tmpsock, (struct sockaddr *) &raddr->addr,
 				raddr->salen) < 0)
 	{
+#ifndef WIN32
 		if (SOCK_ERRNO == EINTR)
+#else
+		if (SOCK_ERRNO == WSAEINTR)
+#endif
 			/* Interrupted system call - we'll just try again */
 			goto retry3;
 		strlcpy(errbuf, "PQcancel() -- connect() failed: ", errbufsize);
@@ -4389,7 +4396,11 @@
 retry4:
 	if (send(tmpsock, (char *) &crp, sizeof(crp), 0) != (int) sizeof(crp))
 	{
+#ifndef WIN32
 		if (SOCK_ERRNO == EINTR)
+#else
+		if (SOCK_ERRNO == WSAEINTR)
+#endif
 			/* Interrupted system call - we'll just try again */
 			goto retry4;
 		strlcpy(errbuf, "PQcancel() -- send() failed: ", errbufsize);
@@ -4406,7 +4417,11 @@
 retry5:
 	if (recv(tmpsock, (char *) &crp, 1, 0) < 0)
 	{
+#ifndef WIN32
 		if (SOCK_ERRNO == EINTR)
+#else
+		if (SOCK_ERRNO == WSAEINTR)
+#endif
 			/* Interrupted system call - we'll just try again */
 			goto retry5;
 		/* we ignore other error conditions */
diff -Nru postgresql-13.4-orig/src/interfaces/libpq/fe-misc.c postgresql-13.4-patched/src/interfaces/libpq/fe-misc.c
--- postgresql-13.4-orig/src/interfaces/libpq/fe-misc.c	2021-08-09 16:49:05.000000000 -0400
+++ postgresql-13.4-patched/src/interfaces/libpq/fe-misc.c	2021-09-09 08:09:16.421112706 -0400
@@ -681,7 +681,11 @@
 						  conn->inBufSize - conn->inEnd);
 	if (nread < 0)
 	{
+#ifndef WIN32
 		if (SOCK_ERRNO == EINTR)
+#else
+		if (SOCK_ERRNO == WSAEINTR)
+#endif
 			goto retry3;
 		/* Some systems return EAGAIN/EWOULDBLOCK for no data */
 #ifdef EAGAIN
@@ -689,12 +693,20 @@
 			return someread;
 #endif
 #if defined(EWOULDBLOCK) && (!defined(EAGAIN) || (EWOULDBLOCK != EAGAIN))
+#ifndef WIN32
 		if (SOCK_ERRNO == EWOULDBLOCK)
+#else
+		if (SOCK_ERRNO == WSAEWOULDBLOCK)
+#endif
 			return someread;
 #endif
 		/* We might get ECONNRESET here if using TCP and backend died */
 #ifdef ECONNRESET
+#ifndef WIN32
 		if (SOCK_ERRNO == ECONNRESET)
+#else
+		if (SOCK_ERRNO == WSAECONNRESET)
+#endif
 			goto definitelyFailed;
 #endif
 		/* pqsecure_read set the error message for us */
@@ -771,7 +783,11 @@
 						  conn->inBufSize - conn->inEnd);
 	if (nread < 0)
 	{
+#ifndef WIN32
 		if (SOCK_ERRNO == EINTR)
+#else
+		if (SOCK_ERRNO == WSAEINTR)
+#endif
 			goto retry4;
 		/* Some systems return EAGAIN/EWOULDBLOCK for no data */
 #ifdef EAGAIN
@@ -779,12 +795,20 @@
 			return 0;
 #endif
 #if defined(EWOULDBLOCK) && (!defined(EAGAIN) || (EWOULDBLOCK != EAGAIN))
+#ifndef WIN32
 		if (SOCK_ERRNO == EWOULDBLOCK)
+#else
+		if (SOCK_ERRNO == WSAEWOULDBLOCK)
+#endif
 			return 0;
 #endif
 		/* We might get ECONNRESET here if using TCP and backend died */
 #ifdef ECONNRESET
+#ifndef WIN32
 		if (SOCK_ERRNO == ECONNRESET)
+#else
+		if (SOCK_ERRNO == WSAECONNRESET)
+#endif
 			goto definitelyFailed;
 #endif
 		/* pqsecure_read set the error message for us */
@@ -904,10 +928,18 @@
 					break;
 #endif
 #if defined(EWOULDBLOCK) && (!defined(EAGAIN) || (EWOULDBLOCK != EAGAIN))
+#ifndef WIN32
 				case EWOULDBLOCK:
+#else
+				case WSAEWOULDBLOCK:
+#endif
 					break;
 #endif
+#ifndef WIN32
 				case EINTR:
+#else
+				case WSAEINTR:
+#endif
 					continue;
 
 				default:
@@ -1121,7 +1153,11 @@
 	/* We will retry as long as we get EINTR */
 	do
 		result = pqSocketPoll(conn->sock, forRead, forWrite, end_time);
+#ifndef WIN32
 	while (result < 0 && SOCK_ERRNO == EINTR);
+#else
+	while (result < 0 && SOCK_ERRNO == WSAEINTR);
+#endif
 
 	if (result < 0)
 	{
diff -Nru postgresql-13.4-orig/src/interfaces/libpq/fe-secure.c postgresql-13.4-patched/src/interfaces/libpq/fe-secure.c
--- postgresql-13.4-orig/src/interfaces/libpq/fe-secure.c	2021-08-09 16:49:05.000000000 -0400
+++ postgresql-13.4-patched/src/interfaces/libpq/fe-secure.c	2021-09-09 08:17:44.965141342 -0400
@@ -254,15 +254,26 @@
 #ifdef EAGAIN
 			case EAGAIN:
 #endif
-#if defined(EWOULDBLOCK) && (!defined(EAGAIN) || (EWOULDBLOCK != EAGAIN))
+#if defined(EWOULDBLOCK) && (!defined(EAGAIN) || (EWOULDBLOCK != EAGAIN)) && !defined(WIN32)
 			case EWOULDBLOCK:
 #endif
+
+#ifndef WIN32
 			case EINTR:
+#else
+			case WSAEWOULDBLOCK:
+			case WSAEINTR:
+#endif
 				/* no error message, caller is expected to retry */
 				break;
 
+#if defined(ECONNRESET) && !defined(WIN32)
 #ifdef ECONNRESET
 			case ECONNRESET:
+#endif
+#ifdef WIN32
+			case WSAECONNRESET:
+#endif
 				printfPQExpBuffer(&conn->errorMessage,
 								  libpq_gettext("server closed the connection unexpectedly\n"
 												"\tThis probably means the server terminated abnormally\n"
@@ -363,10 +374,15 @@
 #ifdef EAGAIN
 			case EAGAIN:
 #endif
-#if defined(EWOULDBLOCK) && (!defined(EAGAIN) || (EWOULDBLOCK != EAGAIN))
+#if defined(EWOULDBLOCK) && (!defined(EAGAIN) || (EWOULDBLOCK != EAGAIN)) && !defined(WIN32)
 			case EWOULDBLOCK:
 #endif
+#ifndef WIN32
 			case EINTR:
+#else
+			case WSAEWOULDBLOCK:
+			case WSAEINTR:
+#endif
 				/* no error message, caller is expected to retry */
 				break;
 
@@ -374,11 +390,16 @@
 				/* Set flag for EPIPE */
 				REMEMBER_EPIPE(spinfo, true);
 
-#ifdef ECONNRESET
+#if defined(ECONNRESET) && !defined(WIN32)
 				/* FALL THRU */
 
 			case ECONNRESET:
 #endif
+#ifdef WIN32
+				/* FALL THRU */
+
+			case WSAECONNRESET:
+#endif
 				printfPQExpBuffer(&conn->errorMessage,
 								  libpq_gettext("server closed the connection unexpectedly\n"
 												"\tThis probably means the server terminated abnormally\n"
diff -Nru postgresql-13.4-orig/src/interfaces/libpq/fe-secure-openssl.c postgresql-13.4-patched/src/interfaces/libpq/fe-secure-openssl.c
--- postgresql-13.4-orig/src/interfaces/libpq/fe-secure-openssl.c	2021-08-09 16:49:05.000000000 -0400
+++ postgresql-13.4-patched/src/interfaces/libpq/fe-secure-openssl.c	2021-09-09 08:19:55.747197299 -0400
@@ -1585,10 +1585,15 @@
 #ifdef EAGAIN
 			case EAGAIN:
 #endif
-#if defined(EWOULDBLOCK) && (!defined(EAGAIN) || (EWOULDBLOCK != EAGAIN))
+#if defined(EWOULDBLOCK) && (!defined(EAGAIN) || (EWOULDBLOCK != EAGAIN)) && !defined(WIN32)
 			case EWOULDBLOCK:
 #endif
+#ifndef WIN32
 			case EINTR:
+#else
+			case WSAEINTR:
+			case WSAEWOULDBLOCK:
+#endif
 				BIO_set_retry_read(h);
 				break;
 
@@ -1615,10 +1620,15 @@
 #ifdef EAGAIN
 			case EAGAIN:
 #endif
-#if defined(EWOULDBLOCK) && (!defined(EAGAIN) || (EWOULDBLOCK != EAGAIN))
+#if defined(EWOULDBLOCK) && (!defined(EAGAIN) || (EWOULDBLOCK != EAGAIN)) && !defined(WIN32)
 			case EWOULDBLOCK:
 #endif
+#ifndef WIN32
 			case EINTR:
+#else
+			case WSAEINTR:
+			case WSAEWOULDBLOCK:
+#endif
 				BIO_set_retry_write(h);
 				break;
 
