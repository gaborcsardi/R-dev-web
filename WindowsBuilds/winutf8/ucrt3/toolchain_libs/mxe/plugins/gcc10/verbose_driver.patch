diff -Nru gcc-10.2.0-orig/gcc/gcc.c gcc-10.2.0-patched/gcc/gcc.c
--- gcc-10.2.0-orig/gcc/gcc.c	2020-07-23 02:35:17.624387637 -0400
+++ gcc-10.2.0-patched/gcc/gcc.c	2021-06-28 01:37:26.649124073 -0400
@@ -2799,9 +2799,20 @@
       struct stat st;
 
       if (stat (name, &st) < 0
-	  || S_ISDIR (st.st_mode))
+	  || S_ISDIR (st.st_mode)) {
+
+        if (verbose_flag)
+          printf("access_check failure name \"%s\" mode %d isdir %d X_OK %d\n",
+                 name, mode, S_ISDIR (st.st_mode), X_OK);
 	return -1;
+      }
+      if (verbose_flag)
+        printf("accesS_check exec ok name \"%s\"\n", name);
     }
+  if (verbose_flag)
+    printf("access_check returning access name \"%s\" mode %d result %d\n",
+           name, mode, access(name, mode));
+    
 
   return access (name, mode);
 }
@@ -2832,11 +2843,15 @@
   if (info->suffix_len)
     {
       memcpy (path + len, info->suffix, info->suffix_len + 1);
+      if (verbose_flag)
+        printf("file_at_path suffix calling access check %s\n", path);
       if (access_check (path, info->mode) == 0)
 	return path;
     }
 
   path[len] = '\0';
+  if (verbose_flag)
+    printf("file_at_path non-suffix calling access check %s\n", path);
   if (access_check (path, info->mode) == 0)
     return path;
 
@@ -2868,6 +2883,8 @@
 
   if (IS_ABSOLUTE_PATH (name))
     {
+      if (verbose_flag)
+        printf("find_a_file absolute %s\n", name);
       if (access (name, mode) == 0)
 	return xstrdup (name);
 
@@ -2879,6 +2896,8 @@
   info.name_len = strlen (info.name);
   info.suffix_len = strlen (info.suffix);
   info.mode = mode;
+  if (verbose_flag)
+    printf("find_a_file for_each_path %s\n", name);
 
   return (char*) for_each_path (pprefix, do_multi,
 				info.name_len + info.suffix_len,
@@ -7160,7 +7179,12 @@
 static const char *
 find_file (const char *name)
 {
+  if (verbose_flag)
+    printf("find_file: \"%s\"\n", name);
   char *newname = find_a_file (&startfile_prefixes, name, R_OK, true);
+  if (verbose_flag)
+    printf("find_file newname: \"%s\"\n",
+      newname ? newname : "<null>");
   return newname ? newname : name;
 }
 
