<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>regular expressions on The R Blog</title>
    <link>https://blog.r-project.org/tags/regular-expressions/</link>
    <description>Recent content in regular expressions on The R Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Jun 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.r-project.org/tags/regular-expressions/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why to avoid \x in regular expressions</title>
      <link>https://blog.r-project.org/2022/06/27/why-to-avoid-%5Cx-in-regular-expressions/</link>
      <pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.r-project.org/2022/06/27/why-to-avoid-%5Cx-in-regular-expressions/</guid>
      <description>Using \x in string literals is almost always a bad idea, but using it in regular expressions is particularly dangerous.
Consider this “don’t do” example in R 4.2.1 or earlier:
text &amp;lt;- &amp;quot;Hello\u00a0R&amp;quot; gsub(&amp;quot;\xa0&amp;quot;, &amp;quot;&amp;quot;, text) a0 is the code point of the Unicode “NO-BREAK SPACE” and the example runs in UTF-8 locale. The intention is to remove the space; a slightly more complicated variant has been discussed on the R-devel mailing list about half a year ago.</description>
    </item>
    
  </channel>
</rss>