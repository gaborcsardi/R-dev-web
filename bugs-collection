=================================================
This is an automated collection of open reports in
the R-bugs repository.
=================================================

Directory:  Accuracy

none

Directory:  Add-ons

none

Directory:  Analyses

none

Directory:  Documentation

none

Directory:  Graphics

* PR# 202 *
Subject: persp box occlusion bug
From: wsi@gcal.ac.uk
Date: Wed, 2 Jun 1999 15:02:03 +0200 (MET DST)
--The persp algorithm does not apply the occlusion rules to the frame, 
--which is always plotted first. 
--A bug, but not very simple to fix.
~~~~~~~~~~ original reports follow ~~~~~~~~~~
==> 202 <==
From wsi@gcal.ac.uk  Wed Jun  2 15:02:10 1999
Received: from localhost (blueberry [130.225.108.193])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id PAA27126
	for <R-bugs@biostat.ku.dk>; Wed, 2 Jun 1999 15:02:03 +0200 (MET DST)
Date: Wed, 2 Jun 1999 15:02:03 +0200 (MET DST)
From: wsi@gcal.ac.uk
Message-Id: <199906021302.PAA27126@pubhealth.ku.dk>
To: R-bugs@biostat.ku.dk
Subject: persp box occlusion bug

Full_Name: Bill Simpson
Version: 64.1
OS: linux
Submission from: (NULL) (193.62.250.209)


Bug in persp() bounding box:
If the surface being plotted extends below the lower z-axis boundary, the box
is
drawn with the wrong occlusion. The box is shown as being occluded by the
surface
even though it should be in front of the surface.

The box is correct for surface extending above the box. Problem is only for
surface extending below the box.

This exhibits the bug:

std<-rep(seq(-32,32,8),9)/1000 * 60
cf<-rep(seq(-32,32,8),rep(9,9))/1000 *60 
dp<-(cf-std)/.6
std<-unique(std)
cf<-unique(cf)
dp<-t(matrix(dp,length(cf),length(std)))
persp(std,cf,dp, xlim=c(-2,2), ylim=c(-2,2), zlim=c(0,5),theta=-40,    
phi=45,
box=TRUE,ltheta=-120, lphi=120,
d=1.5, shade=.7)


==> 202.audit <==
Wed Jun 30 19:31:18 1999	pd	moved from incoming to Graphics
Thu Jul 01 18:19:48 1999	pd	changed notes
Sun Feb 20 10:07:11 2000	ripley	changed notes
Mon Feb 28 17:17:51 2000	pd	changed notes
Mon Feb 28 17:18:28 2000	pd	changed notes
Mon Feb 28 17:19:35 2000	pd	changed notes
Mon Feb 28 17:20:17 2000	pd	changed notes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* PR# 400 *
Subject: X11 troubles
From: Peter Dalgaard BSA <p.dalgaard@biostat.ku.dk>
Date: 13 Jan 2000 14:31:42 +0100
--a) We don't handle multiple window closes well
--b) X11 errors should be caught by an error handler, not kill R
~~~~~~~~~~ original reports follow ~~~~~~~~~~
==> 400 <==
From pd@biostat.ku.dk  Thu Jan 13 14:29:00 2000
Received: from biostat.ku.dk (blueberry [130.225.108.193])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id OAA01544
	for <r-bugs@mail.kubism.ku.dk>; Thu, 13 Jan 2000 14:29:00 +0100 (MET)
Received: (from pd@localhost)
	by biostat.ku.dk (8.9.3/8.9.3) id OAA15286;
	Thu, 13 Jan 2000 14:31:43 +0100
Sender: pd@blueberry.kubism.ku.dk
To: r-bugs@biostat.ku.dk
Subject: X11 troubles
From: Peter Dalgaard BSA <p.dalgaard@biostat.ku.dk>
Date: 13 Jan 2000 14:31:42 +0100
Message-ID: <x23ds2nlmp.fsf@blueberry.kubism.ku.dk>
Lines: 24
X-Mailer: Gnus v5.7/Emacs 20.4
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit

Just to get these issues recorded in the bug repository:

a) We don't handle multiple window closes well

My "favourite" version of this is when I ^Z out of an R session with
an open graphics window to do something on the command line, then kill
the graphics window (which does nothing), kill it again, realise that
it's because the R session was stopped, and:

[pd@blueberry BUILD]$ %
bin/R
Segmentation fault (core dumped)

b) X11 errors should be caught by an error handler, not kill R.

This is mainly seen when there's an error somewhere else, such as
trouble with the font setup. But in principle, we should at worst shut
down the graphics window, not R itself.

-- 
   O__  ---- Peter Dalgaard             Blegdamsvej 3  
  c/ /'_ --- Dept. of Biostatistics     2200 Cph. N   
 (*) \(*) -- University of Copenhagen   Denmark      Ph: (+45) 35327918
~~~~~~~~~~ - (p.dalgaard@biostat.ku.dk)             FAX: (+45) 35327907

==> 400.audit <==
Wed Jan 26 19:28:37 2000	ripley	moved from incoming to Graphics
Mon Feb 28 17:07:48 2000	pd	changed notes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* PR# 414 *
Subject:  graphics bugs: steep slopes and large values beyond ylim 
From: Ben Bolker <bolker@zoo.ufl.edu>
Date: Mon, 7 Feb 2000 18:28:04 -0500
--Followup on R-devel showed this was due to generating integer coordinates 
--outside +/- 2^15 in the X11 driver.
~~~~~~~~~~ original reports follow ~~~~~~~~~~
==> 414 <==
From ben@bolker-nt.zoo.ufl.edu  Tue Feb  8 00:32:03 2000
Received: from triarch.zoo.ufl.edu (triarch.zoo.ufl.edu [128.227.60.248])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id AAA13274
	for <r-bugs@biostat.ku.dk>; Tue, 8 Feb 2000 00:32:02 +0100 (MET)
Received: from bolker-nt.zoo.ufl.edu ([128.227.60.126])
          by triarch.zoo.ufl.edu (Netscape Messaging Server 3.5)
           with ESMTP id 494; Mon, 7 Feb 2000 18:32:02 -0500
Received: (from ben@localhost)
	by bolker-nt.zoo.ufl.edu (8.9.3/8.9.3) id SAA22301;
	Mon, 7 Feb 2000 18:28:04 -0500
Date: Mon, 7 Feb 2000 18:28:04 -0500
From: Ben Bolker <bolker@zoo.ufl.edu>
Message-Id: <200002072328.SAA22301@bolker-nt.zoo.ufl.edu>
To: r-bugs@biostat.ku.dk
Subject:  graphics bugs: steep slopes and large values beyond ylim 
Cc: ben@bolker-nt.zoo.ufl.edu


  Some of my students have uncovered some apparent graphics bugs in 
R.  I think they may manifest slightly different on different platforms/
with different display devices (they sometimes report a Windows graph
that looks OK but odd results on printing).
  I'm able to replicate similar problems on my Linux (RH 6.0) system.


1. abline() plots nothing, or a wrong line, when the slope is too steep.

plot(0:10,0:10)
abline(a=0,b=100)
abline(a=0,b=200)
abline(a=0,b=300)
abline(a=0,b=80)

2. when plotting with type "l" and with values far beyond the limits of
the plot, semi-random lines appear on the plot.

plot(exp(1:100),ylim=c(0,10),type="l")

Any thoughts?  I poked a little bit at this myself: abline calls GLine, neither of them
seems to do much checking whether the endpoints of the line to be drawn are way outside of the
window (I guess that XDrawLine, which gets called by GLine, can't handle this).
I guess this should probably be fixed at the the level of GLine (it might fix both of
the above problems, but I'm a little bit afraid digging this deeply into the graphics drivers.
  Maybe it will be obvious to someone closer to the code?

--please do not edit the information below--

Version:
 platform = i686-unknown-linux
 arch = i686
 os = linux
 system = i686, linux
 status = 
 major = 0
 minor = 99.0
 year = 2000
 month = February
 day = 7
 language = R

Search Path:
 .GlobalEnv, Autoloads, package:base

==> 414.audit <==
Wed Feb 16 19:26:57 2000	ripley	moved from incoming to Graphics
Sun Feb 20 10:13:40 2000	ripley	changed notes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Directory:  In-Out

none

Directory:  Installation

none

Directory:  Language

* PR# 408 *
Subject: convolution bug
From: wsimpson@gcal.ac.uk
Date: Fri, 28 Jan 2000 11:17:36 +0100 (MET)
-- no notes --
~~~~~~~~~~ original reports follow ~~~~~~~~~~
==> 408 <==
From wsimpson@gcal.ac.uk  Fri Jan 28 11:17:36 2000
Received: from localhost (blueberry [130.225.108.193])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id LAA11325
	for <R-bugs@biostat.ku.dk>; Fri, 28 Jan 2000 11:17:36 +0100 (MET)
Date: Fri, 28 Jan 2000 11:17:36 +0100 (MET)
From: wsimpson@gcal.ac.uk
Message-Id: <200001281017.LAA11325@pubhealth.ku.dk>
To: R-bugs@biostat.ku.dk
Subject: convolution bug

Full_Name: Bill Simpson
Version: 65.1 , 0.90.1
OS: Linux
Submission from: (NULL) (193.62.250.209)


I reported this on r-help, but here is official bug report.

The present convolve() does not do convolution by default. Its default behaviour
is
correlation. This is a bug.

The default argument conj should be set to FALSE.

The zero-padding should be on the right for linear convolution (don't ask me
why you call this type="open"; I suggest type="linear").

Here is what I expect linear convolution to do:
myconvolve<-function (x,h) 
{
    nx <- length(x)
    nh <- length(h)
    #zero pad
    if(nx>nh)
       {
       x <- c(x,rep(0, nh-1))
       h<-c(h,rep(0,nx-1))
       }
    else
       {
       h <- c(h,rep(0, nx-1))
       x<-c(x,rep(0,nh-1))
       }
    x <- fft(fft(x) * fft(h), inv = TRUE)
    Re(x)/length(x)
#I am not sure about this, the R IFFT is weird
}

What "circular" convolution should do is just
eliminate the zero-padding:

myconvolve2<-function (x,h)
{
#no padding, circular convolution
    nx <- length(x)
    nh <- length(h)
    x <- fft(fft(x) * fft(h), inv = TRUE)
    Re(x)/(nx)
}


I suggest that you create two functions, convolve() and correlate(), and get
rid
of the conj argument in convolve().

==> 408.audit <==
Wed Feb 16 19:28:42 2000	ripley	moved from incoming to Language
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* PR# 412 *
Subject: anomalies with call objects
From: Peter Dalgaard BSA <p.dalgaard@biostat.ku.dk>
Date: 06 Feb 2000 01:18:50 +0100
-- no notes --
~~~~~~~~~~ original reports follow ~~~~~~~~~~
==> 412 <==
From postmaster@franz.stat.wisc.edu  Sun Feb  6 01:16:33 2000
Received: from stat.math.ethz.ch (daemon@hypatia.ethz.ch [129.132.58.23])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id BAA26868
	for <R-bugs@biostat.ku.dk>; Sun, 6 Feb 2000 01:16:31 +0100 (MET)
Received: (from daemon@localhost)
	by stat.math.ethz.ch (8.9.1/8.9.1) id BAA18080
	for <r-bugs@hypatia.math.ethz.ch>; Sun, 6 Feb 2000 01:16:38 +0100 (MET)
Received: from franz.stat.wisc.edu(128.105.174.95)
 via SMTP by hypatia, id smtpdAAAa004QS; Sun Feb  6 01:16:33 2000
Received: from pubhealth.ku.dk (really [130.225.108.10]) by franz.stat.wisc.edu
	via smail with esmtp
	id <m12HFNP-000ZSxC@franz.stat.wisc.edu> (Debian Smail3.2.0.102)
	for <r-bugs@r-project.org>; Sat, 5 Feb 2000 18:16:31 -0600 (CST) 
Received: from biostat.ku.dk (blueberry [130.225.108.193])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id BAA26864
	for <r-bugs@r-project.org>; Sun, 6 Feb 2000 01:16:18 +0100 (MET)
Received: (from pd@localhost)
	by biostat.ku.dk (8.9.3/8.9.3) id BAA12311;
	Sun, 6 Feb 2000 01:18:51 +0100
Sender: pd@blueberry.kubism.ku.dk
To: r-bugs@r-project.org
Subject: anomalies with call objects
From: Peter Dalgaard BSA <p.dalgaard@biostat.ku.dk>
Date: 06 Feb 2000 01:18:50 +0100
Message-ID: <x2900zyyhh.fsf@blueberry.kubism.ku.dk>
Lines: 51
X-Mailer: Gnus v5.7/Emacs 20.4
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit


Call objects don't always behave as you'd expect. They're mostly
list-like, but with exceptions:

> f<-function(x,y,...)match.call(expand.dots=FALSE)
> xx <- f(y=1,2,z=3,4)
> dd <- xx$...
> xx$... <- NULL
> c(xx,dd)
[[1]]
f(x = 2, y = 1)

$z
[1] 3

[[3]]
[1] 4

> as.call(c(as.list(xx),dd))
f(x = 2, y = 1, z = 3, 4)

(Splus has this rather differently, since dd becomes a call to list()
rather than a list of promises:

S> c(xx,dd)
f(x = 2, y = 1, list, z = 3, 4)
S> as.call(c(as.list(xx),dd))
f(x = 2, y = 1, list, z = 3, 4)

...but at least gives the same in both cases)

Also, the names of arguments added with [[<- is getting dropped if a
new element is required:

> xx[["abc"]]<-123
> xx
f(x = 2, y = 1, 123)

S has what I'd expect there:

S> xx[["abc"]]<-123
S> xx
f(x = 2, y = 1, abc = 123)

[R-0.99.0 prerelease on RedHat6.1, but this is likely not a new thing.]

-- 
   O__  ---- Peter Dalgaard             Blegdamsvej 3  
  c/ /'_ --- Dept. of Biostatistics     2200 Cph. N   
 (*) \(*) -- University of Copenhagen   Denmark      Ph: (+45) 35327918
~~~~~~~~~~ - (p.dalgaard@biostat.ku.dk)             FAX: (+45) 35327907

==> 412.audit <==
Wed Feb 16 19:26:57 2000	ripley	moved from incoming to Language
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Directory:  Low-level

* PR# 391 *
Subject: Segfault in dataentry()
From: Peter Dalgaard BSA <p.dalgaard@pubhealth.ku.dk>
Date: 29 Dec 1999 11:59:50 +0100
--dataentry(0,0) segfaults
~~~~~~~~~~ original reports follow ~~~~~~~~~~
==> 391 <==
From pd@biostat.ku.dk  Wed Dec 29 11:53:44 1999
Received: from biostat.ku.dk (blueberry [130.225.108.193])
	by pubhealth.ku.dk (8.8.8+Sun/8.8.8) with ESMTP id LAA02951;
	Wed, 29 Dec 1999 11:53:44 +0100 (MET)
Received: (from pd@localhost)
	by biostat.ku.dk (8.9.3/8.9.3) id LAA01559;
	Wed, 29 Dec 1999 11:59:50 +0100
Sender: pd@blueberry.kubism.ku.dk
To: r-core@r-project.org
Subject: Segfault in dataentry()
Cc: r-bugs@biostat.ku.dk
From: Peter Dalgaard BSA <p.dalgaard@pubhealth.ku.dk>
Date: 29 Dec 1999 11:59:50 +0100
Message-ID: <x2d7rqt3kp.fsf@blueberry.kubism.ku.dk>
Lines: 18
X-Mailer: Gnus v5.7/Emacs 20.4
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Length: 611


> dataentry(0,0)

Program received signal SIGSEGV, Segmentation fault.
0x808991c in duplicate (s=0x0) at ../../../R/src/main/duplicate.c:42
42	    switch (TYPEOF(s)) {

Apparently that one doesn't get trapped by the no-segfault checks.
Martin? 

(It's not too high priority to fix, but confusing data.entry and
dataentry provokes this quite easily.)

-- 
   O__  ---- Peter Dalgaard             Blegdamsvej 3  
  c/ /'_ --- Dept. of Biostatistics     2200 Cph. N   
 (*) \(*) -- University of Copenhagen   Denmark      Ph: (+45) 35327918
~~~~~~~~~~ - (p.dalgaard@biostat.ku.dk)             FAX: (+45) 35327907

==> 391.reply.1 <==
From maechler@stat.math.ethz.ch  Fri Dec 31 18:09:17 1999
Received: from stat.math.ethz.ch (hypatia.ethz.ch [129.132.58.23])
	by pubhealth.ku.dk (8.8.8+Sun/8.8.8) with ESMTP id SAA12661;
	Fri, 31 Dec 1999 18:09:16 +0100 (MET)
Received: (from daemon@localhost)
	by stat.math.ethz.ch (8.9.1/8.9.1) id SAA16695;
	Fri, 31 Dec 1999 18:09:19 +0100 (MET)
Received: from florence(129.132.58.33), claiming to be "florence.ethz.ch"
 via SMTP by hypatia, id smtpdAAAa0044p; Fri Dec 31 18:09:10 1999
Received: (maechler@localhost) by florence.ethz.ch (8.9.3/D-MATH-client) id SAA15779; Fri, 31 Dec 1999 18:09:14 +0100
X-Authentication-Warning: florence.ethz.ch: maechler set sender to maechler@florence using -f
From: Martin Maechler <maechler@stat.math.ethz.ch>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <14444.58169.886168.959820@gargle.gargle.HOWL>
Date: Fri, 31 Dec 1999 18:09:13 +0100 (MET)
To: p.dalgaard@pubhealth.ku.dk
Cc: R-bugs@biostat.ku.dk
Subject: Re: Segfault in dataentry() (PR#391)
In-Reply-To: <199912291053.LAA02959@pubhealth.ku.dk>
References: <199912291053.LAA02959@pubhealth.ku.dk>
X-Mailer: VM 6.75 under Emacs 20.5.1
Reply-To: Martin Maechler <maechler@stat.math.ethz.ch>
Content-Length: 1008

>>>>> "PD" == p dalgaard <p.dalgaard@pubhealth.ku.dk> writes:

    >> dataentry(0,0)

    PD> Program received signal SIGSEGV, Segmentation fault.  0x808991c in
    PD> duplicate (s=0x0) at ../../../R/src/main/duplicate.c:42 42 switch
    PD> (TYPEOF(s)) {

    PD> Apparently that one doesn't get trapped by the no-segfault checks.
    PD> Martin?

There's a not-so-short  "stop.list" of functions which are *NOT* tested for
segfaults.   dataentry (w/ and w/o ".") is among them.
all the interactive ones are, actually.
[[remember:   The list was quite a bit shorter, and there were R core
	      members who complained...]] 

Look in  ..../tests/make-no-segfault.R for the statements starting with

 edit.int <- c("fix", "edit", "vi", "emacs", "pico", "xemacs", "xedit")
 misc.int <- c("browser", "bug.report", "menu")
 stop.list[["base"]] <-
    ..

to find all the functions which are *not* tested for seg.faults.

Maybe we (R-core) we should really always have
      R_TESTLOTS=yes
in our environments?

==> 391.reply.2 <==
From hornik@ci.tuwien.ac.at  Sat Jan  1 16:40:27 2000
Received: from fangorn.ci.tuwien.ac.at (fangorn.ci.tuwien.ac.at [128.131.51.24])
	by pubhealth.ku.dk (8.8.8+Sun/8.8.8) with ESMTP id QAA13861
	for <R-bugs@biostat.ku.dk>; Sat, 1 Jan 2000 16:40:27 +0100 (MET)
Received: from aragorn.ci.tuwien.ac.at (hornik@aragorn.ci.tuwien.ac.at [128.131.51.35])
	by fangorn.ci.tuwien.ac.at (8.9.3/8.9.3/Debian/GNU) with ESMTP id QAA19454;
	Sat, 1 Jan 2000 16:39:43 +0100
Received: (from hornik@localhost)
	by aragorn.ci.tuwien.ac.at (8.9.3/8.8.5) id QAA19446;
	Sat, 1 Jan 2000 16:40:51 +0100
From: Kurt Hornik <Kurt.Hornik@ci.tuwien.ac.at>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <14446.8194.975894.184062@aragorn.ci.tuwien.ac.at>
Date: Sat, 1 Jan 2000 16:40:50 +0100 (CET)
To: maechler@stat.math.ethz.ch
Cc: r-devel@stat.math.ethz.ch, R-bugs@biostat.ku.dk
Subject: Re: Segfault in dataentry() (PR#391)
In-Reply-To: <199912311709.SAA12673@pubhealth.ku.dk>
References: <199912311709.SAA12673@pubhealth.ku.dk>
X-Mailer: VM 6.75 under Emacs 19.34.1
Reply-To: Kurt.Hornik@ci.tuwien.ac.at
Content-Length: 1470

>>>>> maechler  writes:

>>>>> "PD" == p dalgaard <p.dalgaard@pubhealth.ku.dk> writes:
>>> dataentry(0,0)

PD> Program received signal SIGSEGV, Segmentation fault.  0x808991c in
PD> duplicate (s=0x0) at ../../../R/src/main/duplicate.c:42 42 switch
PD> (TYPEOF(s)) {

PD> Apparently that one doesn't get trapped by the no-segfault checks.
PD> Martin?

> There's a not-so-short  "stop.list" of functions which are *NOT* tested for
> segfaults.   dataentry (w/ and w/o ".") is among them.
> all the interactive ones are, actually.
> [[remember:   The list was quite a bit shorter, and there were R core
> 	      members who complained...]] 

> Look in  ..../tests/make-no-segfault.R for the statements starting with

>  edit.int <- c("fix", "edit", "vi", "emacs", "pico", "xemacs", "xedit")
>  misc.int <- c("browser", "bug.report", "menu")
>  stop.list[["base"]] <-
>     ..

> to find all the functions which are *not* tested for seg.faults.

> Maybe we (R-core) we should really always have
>       R_TESTLOTS=yes
> in our environments?

Actually, I'd prefer having some means of markup in the Rd source code
to indicate whether an object should not be employed for the no-segfault
testing.  We could still keep the R_TESTLOTS, though ...

E.g, the socket docs would have something correspding to \dontrun in the
examples section.

This should be cleaner than having to change the script in tests.

(Confusion arose when Fritz added old.packages() two days ago ...)

-k

==> 391.audit <==
Fri Feb 18 15:28:12 2000	pd	moved from incoming to Low-level
Mon Feb 28 17:21:37 2000	pd	changed notes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Directory:  Misc

none

Directory:  Models

none

Directory:  Startup

none

Directory:  System-specific

* PR# 452 *
Subject: problem with glm
From: Brad McNeney <mcneney@cs.sfu.ca>
Date: Fri, 18 Feb 2000 17:51:54 -0800 (PST)
--Problems on Alpha's with glm. Status unclear
~~~~~~~~~~ original reports follow ~~~~~~~~~~
==> 452 <==
From mcneney@cs.sfu.ca  Sat Feb 19 02:51:57 2000
Received: from stat.math.ethz.ch (daemon@hypatia.ethz.ch [129.132.58.23])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id CAA15326
	for <R-bugs@biostat.ku.dk>; Sat, 19 Feb 2000 02:51:56 +0100 (MET)
Received: (from daemon@localhost)
	by stat.math.ethz.ch (8.9.1/8.9.1) id CAA05839
	for <r-bugs@stat.math.ethz.ch>; Sat, 19 Feb 2000 02:52:05 +0100 (MET)
Received: from cs.sfu.ca(142.58.111.1)
 via SMTP by hypatia, id smtpdAAAa001RB; Sat Feb 19 02:51:57 2000
Received: from smahlt.math.sfu.ca (smahlt [199.60.17.25])
	by cs.sfu.ca (8.9.1/8.9.1) with ESMTP id RAA10291
	for <r-bugs@stat.math.ethz.ch>; Fri, 18 Feb 2000 17:51:55 -0800 (PST)
Received: from localhost by smahlt.math.sfu.ca (8.8.8/1.1.20.8/23Nov99-0751PM)
	id RAA0000400367; Fri, 18 Feb 2000 17:51:54 -0800 (PST)
X-Authentication-Warning: smahlt.math.sfu.ca: mcneney owned process doing -bs
Date: Fri, 18 Feb 2000 17:51:54 -0800 (PST)
From: Brad McNeney <mcneney@cs.sfu.ca>
X-Sender: mcneney@smahlt.math.sfu.ca
To: r-bugs@stat.math.ethz.ch
Subject: problem with glm
Message-ID: <Pine.OSF.4.21.0002181750080.400767-100000@smahlt.math.sfu.ca>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

I'm having sporadic problems with glm on my alpha workstation running
Compaq Tru64 UNIX V5.0 (I can't replicate the problem on my Linux PC). I
have the same problem whether I use a version of R built with the native
C-compiler or a version compiled with gcc. In both cases I've built with
g77.

I want to do some simulations with a call to glm in each rep. A simplified
version would be something like:

N_100; NREPS_100; lam.e_5; logit.inv_function(x){ exp(x)/(1+exp(x)) }
for(i in (1:NREPS)) {
   cat(paste("REP",i,"\n"))
   T_rexp(N,(lam.e))
   Delta_rbinom(N,1,logit.inv(1+T))
   ff_glm(Delta ~ T,family=binomial(logit))
}
 
It often completes all reps, but I occasionally get errors related to
lengths of various objects, etc.:

REP 1 
REP 2
<snip>
REP 9 
Error in model.matrix(t, data) : variable lengths differ


REP 1 
<snip>
REP 53 
Error: subscript out of bounds

REP 1 
<snip>
REP 41 
Error in model.matrix(t, data) : invalid variable type

Different error messages, different numbers of reps. When I call glm again
using the values of T and Delta just before the error, it runs error-free.
When I put the data in a data frame before calling glm I can also get
messages like:

REP 1 
<snip>
REP 64 
Error in model.frame(formula, rownames, variables, varnames, extras, extranames,  : 
        invalid variable type


--please do not edit the information below--

Version:
 platform = alpha-dec-osf5.0
 arch = alpha
 os = osf5.0
 system = alpha, osf5.0
 status = Patched
 major = 0
 minor = 99.0
 year = 2000
 month = February
 day = 9
 language = R

Search Path:
 .GlobalEnv, Autoloads, package:base

-------------------------------------------------------------------------
Brad McNeney                               email: mcneney@stat.sfu.ca
Department of Mathematics and Statistics   web: www.math.sfu.ca/~mcneney/
Simon Fraser University                    phone: 604.291.4815
8888 University Drive                      fax: 604.291.4947
Burnaby, British Columbia
Canada V5A 1S6


==> 452.reply.1 <==
From pd@biostat.ku.dk  Sat Feb 19 13:57:47 2000
Received: from biostat.ku.dk (blueberry [130.225.108.193])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id NAA16134;
	Sat, 19 Feb 2000 13:57:46 +0100 (MET)
Received: (from pd@localhost)
	by biostat.ku.dk (8.9.3/8.9.3) id NAA30569;
	Sat, 19 Feb 2000 13:59:28 +0100
Sender: pd@blueberry.kubism.ku.dk
To: mcneney@cs.sfu.ca
Cc: r-devel@stat.math.ethz.ch, R-bugs@biostat.ku.dk
Subject: Re: [Rd] problem with glm (PR#452)
References: <200002190151.CAA15336@pubhealth.ku.dk>
From: Peter Dalgaard BSA <p.dalgaard@biostat.ku.dk>
Date: 19 Feb 2000 13:59:27 +0100
In-Reply-To: mcneney@cs.sfu.ca's message of "Sat, 19 Feb 2000 02:51:58 +0100 (MET)"
Message-ID: <x24sb5l55c.fsf@blueberry.kubism.ku.dk>
Lines: 47
X-Mailer: Gnus v5.7/Emacs 20.4
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit

mcneney@cs.sfu.ca writes:

> N_100; NREPS_100; lam.e_5; logit.inv_function(x){ exp(x)/(1+exp(x)) }
> for(i in (1:NREPS)) {
>    cat(paste("REP",i,"\n"))
>    T_rexp(N,(lam.e))
>    Delta_rbinom(N,1,logit.inv(1+T))
>    ff_glm(Delta ~ T,family=binomial(logit))
> }
>  
> It often completes all reps, but I occasionally get errors related to
> lengths of various objects, etc.:
...
> --please do not edit the information below--
> 
> Version:
>  platform = alpha-dec-osf5.0
>  arch = alpha
>  os = osf5.0
>  system = alpha, osf5.0
>  status = Patched
>  major = 0
>  minor = 99.0
>  year = 2000
>  month = February
>  day = 9
>  language = R
> 
> Search Path:
>  .GlobalEnv, Autoloads, package:base

I just did the above ~10 times on i386 and nothing happened. We've had
previous reports on trouble in the lm/glm/model.matrix etc. region on
Alpha. 

If you compile with all warnings on, are you getting warnings on
pointer/integer comparisons or assignments?

Can you create a reproducible case (with set.seed to keep the random
generator sequence constant) and would you know how run a debugger on
your version so that we can figure out what is going wrong?

-- 
   O__  ---- Peter Dalgaard             Blegdamsvej 3  
  c/ /'_ --- Dept. of Biostatistics     2200 Cph. N   
 (*) \(*) -- University of Copenhagen   Denmark      Ph: (+45) 35327918
~~~~~~~~~~ - (p.dalgaard@biostat.ku.dk)             FAX: (+45) 35327907

==> 452.followup.1 <==
From mcneney@cs.sfu.ca  Sun Feb 20 05:11:05 2000
Received: from cs.sfu.ca (cs.sfu.ca [142.58.111.1])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id FAA17753;
	Sun, 20 Feb 2000 05:11:03 +0100 (MET)
Received: from smahlt.math.sfu.ca (smahlt [199.60.17.25])
	by cs.sfu.ca (8.9.1/8.9.1) with ESMTP id UAA15662;
	Sat, 19 Feb 2000 20:11:12 -0800 (PST)
Received: from localhost by smahlt.math.sfu.ca (8.8.8/1.1.20.8/23Nov99-0751PM)
	id UAA0000433332; Sat, 19 Feb 2000 20:11:12 -0800 (PST)
X-Authentication-Warning: smahlt.math.sfu.ca: mcneney owned process doing -bs
Date: Sat, 19 Feb 2000 20:11:12 -0800 (PST)
From: Brad McNeney <mcneney@cs.sfu.ca>
X-Sender: mcneney@smahlt.math.sfu.ca
To: Peter Dalgaard BSA <p.dalgaard@biostat.ku.dk>
cc: r-devel@stat.math.ethz.ch, R-bugs@biostat.ku.dk
Subject: Re: [Rd] problem with glm (PR#452)
In-Reply-To: <x24sb5l55c.fsf@blueberry.kubism.ku.dk>
Message-ID: <Pine.OSF.4.21.0002191945010.433325-100000@smahlt.math.sfu.ca>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII


> If you compile with all warnings on, are you getting warnings on
> pointer/integer comparisons or assignments?
> 

Yes, all the ones in regex.c that Doug mentioned. Here's a sample
of these and others (warnings related to graphics/X stuff have been
omitted):

uncmin.c: In function `lltslv':
uncmin.c:281: warning: type mismatch in implicit declaration for built-in
function `memcpy'
character.c: In function `stripchars':
character.c:269: warning: subscript has type `char'
character.c:281: warning: subscript has type `char'
character.c:296: warning: subscript has type `char'
character.c:296: warning: subscript has type `char'
character.c:304: warning: subscript has type `char'
character.c:312: warning: subscript has type `char'
character.c:312: warning: subscript has type `char'
character.c:312: warning: subscript has type `char'
character.c:320: warning: subscript has type `char'
character.c:320: warning: subscript has type `char'
character.c:330: warning: subscript has type `char'
character.c:330: warning: subscript has type `char'
character.c:341: warning: subscript has type `char'
character.c: In function `do_makenames':
character.c:384: warning: subscript has type `char'
character.c:395: warning: subscript has type `char'
/usr/share/misc/bison.simple: In function `Rf_yyparse':
/usr/share/misc/bison.simple:254: warning: `yyval' might be used
uninitialized in this function
regex.c: In function `re_match_2':
regex.c:3770: warning: cast from pointer to integer of different size
regex.c:3770: warning: cast from pointer to integer of different size
regex.c:3776: warning: cast to pointer from integer of different size
regex.c:3776: warning: cast to pointer from integer of different size
regex.c:3923: warning: cast to pointer from integer of different size
regex.c:3923: warning: cast to pointer from integer of different size
regex.c:3976: warning: cast to pointer from integer of different size
regex.c:3976: warning: cast to pointer from integer of different size
regex.c:4082: warning: cast from pointer to integer of different size
regex.c:4083: warning: cast from pointer to integer of different size
regex.c:4115: warning: cast to pointer from integer of different size
regex.c:4115: warning: cast to pointer from integer of different size
regex.c:4128: warning: cast to pointer from integer of different size
regex.c:4128: warning: cast to pointer from integer of different size
regex.c:4296: warning: cast from pointer to integer of different size
regex.c:4297: warning: cast from pointer to integer of different size
saveload.c:495: warning: `BinarySave' defined but not used
saveload.c:1775: warning: `NewBinarySave' defined but not used


I'll see what I can do about getting a more reproducible error. 

Any tips on what to look for if I'm running R within GDB? I don't have
much experience with the debugger. I mostly just use it to see where my
programs are dying. But R is not -- it just gives strange error messages.

TIA,
Brad


==> 452.followup.2 <==
From ripley@stats.ox.ac.uk  Sun Feb 20 09:33:06 2000
Received: from toucan.stats.ox.ac.uk (toucan.stats.ox.ac.uk [163.1.20.20])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id JAA17966;
	Sun, 20 Feb 2000 09:33:05 +0100 (MET)
Received: from max168.public.ox.ac.uk (max168.public.ox.ac.uk [192.76.27.168])
	by toucan.stats.ox.ac.uk (8.9.0/8.9.0) with ESMTP id IAA20341;
	Sun, 20 Feb 2000 08:33:06 GMT
Date: Sun, 20 Feb 2000 08:32:05 +0000 (GMT)
From: Prof Brian D Ripley <ripley@stats.ox.ac.uk>
Sender: ripley@auk.stats
To: Brad McNeney <mcneney@cs.sfu.ca>
cc: Peter Dalgaard BSA <p.dalgaard@biostat.ku.dk>, r-devel@stat.math.ethz.ch,
        R-bugs@biostat.ku.dk
Subject: Re: [Rd] problem with glm (PR#452)
In-Reply-To: <Pine.OSF.4.21.0002191945010.433325-100000@smahlt.math.sfu.ca>
Message-ID: <Pine.GSO.4.05.10002200807420.5046-100000@auk.stats>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Sat, 19 Feb 2000, Brad McNeney wrote:

> 
> > If you compile with all warnings on, are you getting warnings on
> > pointer/integer comparisons or assignments?
> > 
> 
> Yes, all the ones in regex.c that Doug mentioned. Here's a sample
> of these and others (warnings related to graphics/X stuff have been
> omitted):

(Two suggestions which are in the current snapshot follow. Looks like
what is which header varies a bit.)

> uncmin.c: In function `lltslv':
> uncmin.c:281: warning: type mismatch in implicit declaration for built-in
> function `memcpy'

Add a line (third one here) to src/include/R_ext/RS.h:

#ifndef R_RS_H
#define R_RS_H

#include <string.h> /* for memcpy */
#include "Rconfig.h" /* for F77_SYMBOL */


> character.c: In function `stripchars':
> character.c:269: warning: subscript has type `char'
> character.c:281: warning: subscript has type `char'
> character.c:296: warning: subscript has type `char'
> character.c:296: warning: subscript has type `char'
> character.c:304: warning: subscript has type `char'
> character.c:312: warning: subscript has type `char'
> character.c:312: warning: subscript has type `char'
> character.c:312: warning: subscript has type `char'
> character.c:320: warning: subscript has type `char'
> character.c:320: warning: subscript has type `char'
> character.c:330: warning: subscript has type `char'
> character.c:330: warning: subscript has type `char'
> character.c:341: warning: subscript has type `char'
> character.c: In function `do_makenames':
> character.c:384: warning: subscript has type `char'
> character.c:395: warning: subscript has type `char'
> /usr/share/misc/bison.simple: In function `Rf_yyparse':
> /usr/share/misc/bison.simple:254: warning: `yyval' might be used
> uninitialized in this function

Those are all normal.

> regex.c: In function `re_match_2':
> regex.c:3770: warning: cast from pointer to integer of different size
> regex.c:3770: warning: cast from pointer to integer of different size

That looks like a regex bug, with a why? comment in the code. Change
(int) to (long), twice.

> regex.c:3776: warning: cast to pointer from integer of different size
> regex.c:3776: warning: cast to pointer from integer of different size
> regex.c:3923: warning: cast to pointer from integer of different size
> regex.c:3923: warning: cast to pointer from integer of different size
> regex.c:3976: warning: cast to pointer from integer of different size
> regex.c:3976: warning: cast to pointer from integer of different size
> regex.c:4082: warning: cast from pointer to integer of different size
> regex.c:4083: warning: cast from pointer to integer of different size
> regex.c:4115: warning: cast to pointer from integer of different size
> regex.c:4115: warning: cast to pointer from integer of different size
> regex.c:4128: warning: cast to pointer from integer of different size
> regex.c:4128: warning: cast to pointer from integer of different size
> regex.c:4296: warning: cast from pointer to integer of different size
> regex.c:4297: warning: cast from pointer to integer of different size

I've never seen those, but try adding

#define STDC_HEADERS 1

at the top of regex.c.  (I am not convinced that is the cause here.)

> saveload.c:495: warning: `BinarySave' defined but not used
> saveload.c:1775: warning: `NewBinarySave' defined but not used

Normal, on a platform with xdr.

-- 
Brian D. Ripley,                  ripley@stats.ox.ac.uk
Professor of Applied Statistics,  http://www.stats.ox.ac.uk/~ripley/
University of Oxford,             Tel:  +44 1865 272861 (self)
1 South Parks Road,                     +44 1865 272860 (secr)
Oxford OX1 3TG, UK                Fax:  +44 1865 272595


==> 452.reply.2 <==
From pd@biostat.ku.dk  Sun Feb 20 13:28:12 2000
Received: from biostat.ku.dk (blueberry [130.225.108.193])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id NAA18510;
	Sun, 20 Feb 2000 13:28:12 +0100 (MET)
Received: (from pd@localhost)
	by biostat.ku.dk (8.9.3/8.9.3) id NAA31926;
	Sun, 20 Feb 2000 13:30:08 +0100
Sender: pd@blueberry.kubism.ku.dk
To: Brad McNeney <mcneney@cs.sfu.ca>
Cc: Peter Dalgaard BSA <p.dalgaard@biostat.ku.dk>, r-devel@stat.math.ethz.ch,
        R-bugs@biostat.ku.dk
Subject: Re: [Rd] problem with glm (PR#452)
References: <Pine.OSF.4.21.0002191945010.433325-100000@smahlt.math.sfu.ca>
From: Peter Dalgaard BSA <p.dalgaard@biostat.ku.dk>
Date: 20 Feb 2000 13:30:07 +0100
In-Reply-To: Brad McNeney's message of "Sat, 19 Feb 2000 20:11:12 -0800 (PST)"
Message-ID: <x2snyogipc.fsf@blueberry.kubism.ku.dk>
Lines: 34
X-Mailer: Gnus v5.7/Emacs 20.4
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit

Brad McNeney <mcneney@cs.sfu.ca> writes:

> I'll see what I can do about getting a more reproducible error. 
> 
> Any tips on what to look for if I'm running R within GDB? I don't have
> much experience with the debugger. I mostly just use it to see where my
> programs are dying. But R is not -- it just gives strange error messages.

One technique is to set a breakpoint at the line that displays the
error, then you can inspect the condition that caused it (you may have
to go "up" a couple of times to get into an interesting environment.)

Sometimes, it turns out that a variable contains something that it
shouldn't due to memory corruption and then you may have to set a
breakpoint earlier in the code and then maybe a watchpoint on the
memory location.

Another thing that is useful even without gdb is to investigate the
output of traceback() and maybe set 

options(error=quote(DUMP <<- sys.status()))

which allows you to subsequently investigate any active environment at
the time of the error, e.g. using ls(envir=DUMP$sys.frames[[3]]), and
get("x",envir=DUMP$sys.frames[[3]]).

(Newer snapshots have a more elaborate dump.frames function, but the
above should do). 

-- 
   O__  ---- Peter Dalgaard             Blegdamsvej 3  
  c/ /'_ --- Dept. of Biostatistics     2200 Cph. N   
 (*) \(*) -- University of Copenhagen   Denmark      Ph: (+45) 35327918
~~~~~~~~~~ - (p.dalgaard@biostat.ku.dk)             FAX: (+45) 35327907

==> 452.audit <==
Sun Feb 20 21:27:15 2000	ripley	moved from incoming to System-specific
Mon Feb 28 17:30:41 2000	pd	changed notes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Directory:  TooMuchAtOnce

none

Directory:  Windows

none

Directory:  incoming

* PR# 462 *
Subject: pgamma
From: Jim Lindsey <jlindsey@alpha.luc.ac.be>
Date: Tue, 29 Feb 2000 09:50:00 +0100 (MET)
-- no notes --
~~~~~~~~~~ original reports follow ~~~~~~~~~~
==> 462 <==
From jlindsey@alpha.luc.ac.be  Tue Feb 29 09:49:57 2000
Received: from stat.math.ethz.ch (daemon@hypatia.ethz.ch [129.132.58.23])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id JAA09524
	for <R-bugs@biostat.ku.dk>; Tue, 29 Feb 2000 09:49:56 +0100 (MET)
Received: (from daemon@localhost)
	by stat.math.ethz.ch (8.9.1/8.9.1) id JAA23596
	for <r-bugs@stat.math.ethz.ch>; Tue, 29 Feb 2000 09:50:03 +0100 (MET)
Received: from alpha.luc.ac.be(193.190.2.30)
 via SMTP by hypatia, id smtpdAAAa005ke; Tue Feb 29 09:50:01 2000
Received: (from jlindsey@localhost)
	by alpha.luc.ac.be (8.9.3/8.9.3) id JAA17113
	for r-bugs@stat.math.ethz.ch; Tue, 29 Feb 2000 09:50:00 +0100 (MET)
From: Jim Lindsey <jlindsey@alpha.luc.ac.be>
Message-Id: <200002290850.JAA17113@alpha.luc.ac.be>
Subject: pgamma
To: r-bugs@stat.math.ethz.ch (rbugs)
Date: Tue, 29 Feb 2000 09:50:00 +0100 (MET)
X-Mailer: ELM [version 2.5 PL1]
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Under R0.99a with Intel RH5.2, the following appears to go into an
infinite loop:
pgamma(Inf,1,Inf)
This can happen with values fed by nlm.
Both pgamma(Inf,1,1) and pgamma(1,1,Inf) work properly as does
pweibull(Inf,1,Inf).
  Jim

==> 462.reply.1 <==
From maechler@stat.math.ethz.ch  Tue Feb 29 11:17:32 2000
Received: from stat.math.ethz.ch (daemon@hypatia.ethz.ch [129.132.58.23])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id LAA11803
	for <R-bugs@biostat.ku.dk>; Tue, 29 Feb 2000 11:17:29 +0100 (MET)
Received: (from daemon@localhost)
	by stat.math.ethz.ch (8.9.1/8.9.1) id LAA25714;
	Tue, 29 Feb 2000 11:17:37 +0100 (MET)
Received: from lynne(129.132.58.30), claiming to be "lynne.ethz.ch"
 via SMTP by hypatia, id smtpdAAAa006Hk; Tue Feb 29 11:17:34 2000
Received: (maechler@localhost) by lynne.ethz.ch (8.9.3/D-MATH-client) id LAA06816; Tue, 29 Feb 2000 11:17:34 +0100
X-Authentication-Warning: lynne.ethz.ch: maechler set sender to maechler@lynne.ethz.ch using -f
From: Martin Maechler <maechler@stat.math.ethz.ch>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <14523.40125.959923.31830@lynne.ethz.ch>
Date: Tue, 29 Feb 2000 11:17:33 +0100 (MET)
To: jlindsey@alpha.luc.ac.be
Cc: R-bugs@biostat.ku.dk
Subject: Re: [Rd] pgamma (PR#462)
In-Reply-To: <200002290849.JAA09534@pubhealth.ku.dk>
References: <200002290849.JAA09534@pubhealth.ku.dk>
X-Mailer: VM 6.75 under Emacs 20.5.1
Reply-To: Martin Maechler <maechler@stat.math.ethz.ch>

>>>>> "Jim" == Jim Lindsey <jlindsey@alpha.luc.ac.be> writes:

    Jim> Under R0.99a with Intel RH5.2, the following appears to go into an
    Jim> infinite loop: pgamma(Inf,1,Inf) This can happen with values fed
    Jim> by nlm.  Both pgamma(Inf,1,1) and pgamma(1,1,Inf) work properly as
    Jim> does pweibull(Inf,1,Inf).  Jim

This is still in 1.0.0;
I will fix it for the next "patch release".

Martin
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* PR# 463 *
Subject: Bug in read.table
From: "E. S. Venkatraman" <venkat@biosta.mskcc.org>
Date: Tue, 29 Feb 2000 17:47:54 -0500 (EST)
-- no notes --
~~~~~~~~~~ original reports follow ~~~~~~~~~~
==> 463 <==
From venkat@biosta.mskcc.org  Tue Feb 29 23:56:14 2000
Received: from biosta.mskcc.org (biosta.mskcc.org [140.163.130.201])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id XAA20190
	for <r-bugs@biostat.ku.dk>; Tue, 29 Feb 2000 23:56:13 +0100 (MET)
Received: from localhost by biosta.mskcc.org (8.8.8/1.1.10.5/18Nov97-0333PM)
	id RAA0000010506; Tue, 29 Feb 2000 17:47:54 -0500 (EST)
Date: Tue, 29 Feb 2000 17:47:54 -0500 (EST)
From: "E. S. Venkatraman" <venkat@biosta.mskcc.org>
To: r-bugs@biostat.ku.dk
Subject: Bug in read.table
Message-ID: <Pine.OSF.4.05.10002291739570.10358-200000@biosta.mskcc.org>
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="-1062723383-1338110495-951864474=:10358"

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.
  Send mail to mime@docserver.cac.washington.edu for more info.

---1062723383-1338110495-951864474=:10358
Content-Type: TEXT/PLAIN; charset=US-ASCII

Hi.

I want to report a bug in read.table.  The attached output demonstrates
the bug.  Unfortunately, the data file contains confidential information
and hence cannot be attached.  Is there any way to figure out the cause 
of the bug and fix it?  Thanks.

Venkat
-----------------------------------------------------------------------
E. S. Venkatraman, Ph.D.     Phone: (212) 639-8520  Fax: (212) 717-3137
Assistant Attending Member     Memorial Sloan-Kettering Cancer Center
-----------------------------------------------------------------------

---1062723383-1338110495-951864474=:10358
Content-Type: TEXT/PLAIN; charset=US-ASCII; name="r1.out"
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.OSF.4.05.10002291747540.10358@biosta.mskcc.org>
Content-Description: Output from R.
Content-Disposition: attachment; filename="r1.out"

W3ZlbmthdEBtc2stMTMwLTE1MyB2ZW5rYXRdJCBSDQogDQpSIDogQ29weXJp
Z2h0IDIwMDAsIFRoZSBSIERldmVsb3BtZW50IENvcmUgVGVhbQ0KVmVyc2lv
biAxLjAuMCAgKEZlYnJ1YXJ5IDI5LCAyMDAwKQ0KIA0KUiBpcyBmcmVlIHNv
ZnR3YXJlIGFuZCBjb21lcyB3aXRoIEFCU09MVVRFTFkgTk8gV0FSUkFOVFku
DQpZb3UgYXJlIHdlbGNvbWUgdG8gcmVkaXN0cmlidXRlIGl0IHVuZGVyIGNl
cnRhaW4gY29uZGl0aW9ucy4NClR5cGUgICAgIj9saWNlbnNlIiBvciAiP2xp
Y2VuY2UiIGZvciBkaXN0cmlidXRpb24gZGV0YWlscy4NCiANClIgaXMgYSBj
b2xsYWJvcmF0aXZlIHByb2plY3Qgd2l0aCBtYW55IGNvbnRyaWJ1dG9ycy4N
ClR5cGUgICAgIj9jb250cmlidXRvcnMiIGZvciBhIGxpc3QuDQogDQpUeXBl
ICAgICJkZW1vKCkiIGZvciBzb21lIGRlbW9zLCAiaGVscCgpIiBmb3Igb24t
bGluZSBoZWxwLCBvcg0KICAgICAgICAiaGVscC5zdGFydCgpIiBmb3IgYSBI
VE1MIGJyb3dzZXIgaW50ZXJmYWNlIHRvIGhlbHAuDQpUeXBlICAgICJxKCki
IHRvIHF1aXQgUi4NCg0KPiBvcHRpb25zKHdpZHRoPTcyKQ0KPiBjb3VudC5m
aWVsZHMoIkNvbnN1bHQva3Jhc2RhdGEiLHNlcD0iXHQiKQ0KICBbMV0gMTgg
MTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTgg
MTggMTggMTggMTggMTggMTgNCiBbMjNdIDE4IDE4IDE4IDE4IDE4IDE4IDE4
IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4
DQogWzQ1XSAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAx
OCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOA0KIFs2N10gMTggMTggMTgg
MTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTgg
MTggMTggMTggMTgNCiBbODldIDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4
IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4DQo+IHJlYWQudGFibGUoIkNvbnN1
bHQva3Jhc2RhdGEiLHNlcD0iXHQiKQ0KIA0Kcm93LmxlbnM9DQogIFsxXSAx
OCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAx
OCAxOCAxOCAxOCAxOCAxOCAxOA0KIFsyM10gMTggMTggMTggMTggMTggMTgg
MTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTggMTgg
MTgNCiBbNDVdIDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4IDE4
IDE4ICAxICAxIDE4IDE4IDE4IDE4IDE4IDE4IDE4DQogWzY3XSAxOCAxOCAx
OCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAxOCAx
OCAxOCAxOCAxOCAxOA0KIFs4OV0gMTggMTggMTggMTggMTggMTggMTggMTgg
MTggMTggMTggMTggMTggMTggMTggMTggMTgNCkVycm9yIGluIHJlYWQudGFi
bGUoIkNvbnN1bHQva3Jhc2RhdGEiLCBzZXAgPSAiXHQiKSA6DQogICAgICAg
IGFsbCByb3dzIG11c3QgaGF2ZSB0aGUgc2FtZSBsZW5ndGguDQo+IA0KPiB2
ZXJzaW9uDQogICAgICAgICBfDQpwbGF0Zm9ybSBpNjg2LXVua25vd24tbGlu
dXgNCmFyY2ggICAgIGk2ODYNCm9zICAgICAgIGxpbnV4DQpzeXN0ZW0gICBp
Njg2LCBsaW51eA0Kc3RhdHVzDQptYWpvciAgICAxDQptaW5vciAgICAwLjAN
CnllYXIgICAgIDIwMDANCm1vbnRoICAgIEZlYnJ1YXJ5DQpkYXkgICAgICAy
OQ0KbGFuZ3VhZ2UgUg0KPiAgDQoNCg==
---1062723383-1338110495-951864474=:10358--

==> 463.reply.1 <==
From thomas@biostat.washington.edu  Wed Mar  1 00:16:29 2000
Received: from mail.biostat.washington.edu (mail.biostat.washington.edu [128.95.113.21])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id AAA20274
	for <R-bugs@biostat.ku.dk>; Wed, 1 Mar 2000 00:16:28 +0100 (MET)
Received: from mail.biostat.washington.edu (mail.biostat.washington.edu [128.95.113.21])
	by mail.biostat.washington.edu (8.9.3+Sun/8.9.1-fetrow-99-05-16b) with ESMTP id PAA01399;
	Tue, 29 Feb 2000 15:16:33 -0800 (PST)
Date: Tue, 29 Feb 2000 15:16:33 -0800 (PST)
From: Thomas Lumley <thomas@biostat.washington.edu>
To: r-devel@stat.math.ethz.ch
cc: R-bugs@biostat.ku.dk
Subject: Re: [Rd] Bug in read.table (PR#463)
In-Reply-To: <200002292256.XAA20200@pubhealth.ku.dk>
Message-ID: <Pine.GSO.4.21.0002291514300.5673-100000@mail.biostat.washington.edu>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Tue, 29 Feb 2000 venkat@biosta.mskcc.org wrote:

> 
> I want to report a bug in read.table.  The attached output demonstrates
> the bug.  Unfortunately, the data file contains confidential information
> and hence cannot be attached.  Is there any way to figure out the cause 
> of the bug and fix it?  Thanks.


Here's the output in readable form. The bug seems to be that
count.fields() thinks the records are the same length but read.table
doesn't.

	-thomas


[venkat@msk-130-153 venkat]$ R

R : Copyright 2000, The R Development Core Team
Version 1.0.0  (February 29, 2000)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type    "?license" or "?licence" for distribution details.

R is a collaborative project with many contributors.
Type    "?contributors" for a list.

Type    "demo()" for some demos, "help()" for on-line help, or
        "help.start()" for a HTML browser interface to help.
Type    "q()" to quit R.

> options(width=72)
> count.fields("Consult/krasdata",sep="\t")
  [1] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
 [23] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
 [45] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
 [67] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
 [89] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
> read.table("Consult/krasdata",sep="\t")

row.lens=
  [1] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
 [23] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
 [45] 18 18 18 18 18 18 18 18 18 18 18 18 18  1  1 18 18 18 18 18 18 18
 [67] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
 [89] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
Error in read.table("Consult/krasdata", sep = "\t") :
        all rows must have the same length.
>
> version
         _
platform i686-unknown-linux
arch     i686
os       linux
system   i686, linux
status
major    1
minor    0.0
year     2000
month    February
day      29
language R
>



==> 463.reply.2 <==
From thomas@biostat.washington.edu  Wed Mar  1 00:25:49 2000
Received: from mail.biostat.washington.edu (mail.biostat.washington.edu [128.95.113.21])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id AAA20304
	for <R-bugs@biostat.ku.dk>; Wed, 1 Mar 2000 00:25:48 +0100 (MET)
Received: from mail.biostat.washington.edu (mail.biostat.washington.edu [128.95.113.21])
	by mail.biostat.washington.edu (8.9.3+Sun/8.9.1-fetrow-99-05-16b) with ESMTP id PAA01836;
	Tue, 29 Feb 2000 15:25:52 -0800 (PST)
Date: Tue, 29 Feb 2000 15:25:52 -0800 (PST)
From: Thomas Lumley <thomas@biostat.washington.edu>
To: r-devel@stat.math.ethz.ch
cc: venkat@biosta.mskcc.org, R-bugs@biostat.ku.dk
Subject: Re: [Rd] Bug in read.table (PR#463)
In-Reply-To: <Pine.GSO.4.21.0002291514300.5673-100000@mail.biostat.washington.edu>
Message-ID: <Pine.GSO.4.21.0002291519090.5673-100000@mail.biostat.washington.edu>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Tue, 29 Feb 2000, Thomas Lumley wrote:

> On Tue, 29 Feb 2000 venkat@biosta.mskcc.org wrote:
> 
> > 
> > I want to report a bug in read.table.  The attached output demonstrates
> > the bug.  Unfortunately, the data file contains confidential information
> > and hence cannot be attached.  Is there any way to figure out the cause 
> > of the bug and fix it?  Thanks.
> 
> 
> Here's the output in readable form. The bug seems to be that
> count.fields() thinks the records are the same length but read.table
> doesn't.


Ok. read.table and count.fields don't have identical defaults.

R> args(count.fields)
function (file, sep = "", quote = "", skip = 0)

R> args(read.table)
function (file, header = FALSE, sep = "", quote = "\"'", dec = ".",
    row.names, col.names, as.is = FALSE, na.strings = "NA", skip = 0)


So if count.fields likes your data but read.table doesn't, you probably
want

 read.table("Consult/krasdata",sep="\t",quote="")


Please don't use Base64 encoding in attached files -- it was quite hard to
find a program to decode it, and it's really intended for sending binary
files.  Use plain text, and if your mailer insists on encoding attachments
then just cut and paste the output into the message.


	-thomas


Thomas Lumley
Assistant Professor, Biostatistics
University of Washington, Seattle


==> 463.reply.3 <==
From pd@biostat.ku.dk  Wed Mar  1 00:26:50 2000
Received: from biostat.ku.dk (blueberry [130.225.108.193])
	by pubhealth.ku.dk (8.9.3/8.9.1) with ESMTP id AAA20323;
	Wed, 1 Mar 2000 00:26:50 +0100 (MET)
Received: (from pd@localhost)
	by biostat.ku.dk (8.9.3/8.9.3) id AAA08400;
	Wed, 1 Mar 2000 00:26:58 +0100
Sender: pd@blueberry.kubism.ku.dk
To: Thomas Lumley <thomas@biostat.washington.edu>
Cc: r-devel@stat.math.ethz.ch, R-bugs@biostat.ku.dk
Subject: Re: [Rd] Bug in read.table (PR#463)
References: <Pine.GSO.4.21.0002291514300.5673-100000@mail.biostat.washington.edu>
From: Peter Dalgaard BSA <p.dalgaard@biostat.ku.dk>
Date: 01 Mar 2000 00:26:58 +0100
In-Reply-To: Thomas Lumley's message of "Tue, 29 Feb 2000 15:16:33 -0800 (PST)"
Message-ID: <x2ln43614t.fsf@blueberry.kubism.ku.dk>
Lines: 43
X-Mailer: Gnus v5.7/Emacs 20.4
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit

Thomas Lumley <thomas@biostat.washington.edu> writes:

> On Tue, 29 Feb 2000 venkat@biosta.mskcc.org wrote:
> 
> > 
> > I want to report a bug in read.table.  The attached output demonstrates
> > the bug.  Unfortunately, the data file contains confidential information
> > and hence cannot be attached.  Is there any way to figure out the cause 
> > of the bug and fix it?  Thanks.
> 
> 
> Here's the output in readable form. The bug seems to be that
> count.fields() thinks the records are the same length but read.table
> doesn't.

....
> > options(width=72)
> > count.fields("Consult/krasdata",sep="\t")
>   [1] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
>  [23] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
>  [45] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
>  [67] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
>  [89] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
> > read.table("Consult/krasdata",sep="\t")
> 
> row.lens=
>   [1] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
>  [23] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
>  [45] 18 18 18 18 18 18 18 18 18 18 18 18 18  1  1 18 18 18 18 18 18 18
>  [67] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
>  [89] 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18
> Error in read.table("Consult/krasdata", sep = "\t") :
>         all rows must have the same length.

read.data and count.fields have different defaults for the quote=
argument (which is arguably a bug). Try read.table(...,quote="") if
the data contain quote marks (single or double).

-- 
   O__  ---- Peter Dalgaard             Blegdamsvej 3  
  c/ /'_ --- Dept. of Biostatistics     2200 Cph. N   
 (*) \(*) -- University of Copenhagen   Denmark      Ph: (+45) 35327918
~~~~~~~~~~ - (p.dalgaard@biostat.ku.dk)             FAX: (+45) 35327907
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
