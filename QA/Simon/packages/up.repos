#!/bin/sh
#
# up.repos - collects all build results into one syncable repository,
#            creates PACKAGES and PACKAGES.gz
#
# options: sync=no   - don't sync the result with crawler
#

: ${BASE=/Builds/packages}

: ${server=r}

# R version to sync (x.x is always assumed)
versions=`sed -e 's/:.*//' $BASE/vers`
if [ -z "${versions}" ]; then
    echo "** ERROR: vers is missing. Create one with the list of versions"
    echo "   to build repositories for (in X.Y format)"
    exit 1
fi
# BioC repositories (uses BIOC.new + bioc.repos file)
biocrep=`sed -e "s|.*|$BASE/BIOC.new/bin/&|" $BASE/bioc.repos`
# add CRAN which is in the root of $BASE
repos="$BASE $biocrep"
# default: universal architecture
arch=universal
# default: tiger-universal is what we look for
bld=tiger-$arch

#---------------------------------------------------------

: ${sync=yes}
# if we are paranoid, re-run fixtar to be 100% sure
: ${fix=no}

if [ "${skipcran}" = yes ]; then
    repos=$biocrep
fi

if [ -n "$synconly" ]; then echo "synconly=yes"; repos=; fi

if [ ! -e "$BASE/repos.root" ]; then
  echo " * CRAN repos root is missing, creating default one"
  echo "repos" > $BASE/repos.root
fi

for rep in $repos; do
    echo "$rep"
    if [ ! -e "$rep/repos.root" ]; then
	if echo "$rep"|grep BIOC >/dev/null; then
	    echo " * repos root missing in $rep, assumin it's BIOC, creating one"
	    echo "$rep"|sed "s|${BASE}/BIOC.new/bin|repos/bioc|" > "$rep/repos.root"
	fi
    fi
    if [ -e "$rep/repos.root" ]; then
	reproot="$BASE/`head -n 1 $rep/repos.root`"
	mkdir -p $reproot 2> /dev/null
	if [ -e $reproot ]; then
	    echo " -> $reproot"
	    # create universal softlinks if this bin is new and universal
	    if [ ! -e $reproot/bin/macosx -a $arch = universal ]; then
		mkdir -p $reproot/bin/macosx/$arch/contrib/$ver
		ln -s universal $reproot/bin/macosx/powerpc
		ln -s universal $reproot/bin/macosx/i386
	    fi
	    mkdir -p $reproot/bin/macosx/$arch/contrib/$ver
	    for ver in $versions; do
		$BASE/rmdup "$rep/$bld/bin/$ver/*.tgz"
		if [ "$fix" = yes ]; then
		    ls $rep/$bld/bin/$ver/*.tgz|xargs -n 1 $BASE/fixtar
		fi
		rsync -av --delete $rep/$bld/bin/$ver/ $reproot/bin/macosx/$arch/contrib/$ver/
		$BASE/mk.PACKAGES $reproot/bin/macosx/$arch/contrib/$ver/
		if [ -e $reproot/bin/macosx/$arch/contrib/$ver/PACKAGES ]; then
		    gzip -cf9 $reproot/bin/macosx/$arch/contrib/$ver/PACKAGES > $reproot/bin/macosx/$arch/contrib/$ver/PACKAGES.gz
		fi
	    done
	else
	    echo "Non-existing rep.root path ($reproot) for repository $rep" >&2
	fi
    else
	echo "Missing rep.root for repository $rep" >&2
    fi
done

if [ "$sync" = yes ]; then
    if [ "$ismaster" = yes ]; then
    rsync --rsync-path ./rsync -e ssh -av --delete $BASE/repos/bin/ $server:wwwfiles/bin/
    fi

    for v in $versions; do
	rsync -e ssh -av --delete $BASE/repos/bin/macosx/universal/contrib/$v/ r.rsync.urbanek.info:/R/cran/bin/macosx/universal/contrib/$v/
    done
    BIOCVER=`head -n 1 $BASE/bioc.repos|sed -n 's/.*\([0-9].[0-9]\)\/.*/\1/p'`
    if [ -n "${BIOCVER}" ]; then
	rsync -e ssh -av --delete $BASE/repos/bioc/${BIOCVER}/ r.rsync.urbanek.info:/R/bioc/repos/${BIOCVER}/
    fi
fi
