#!/usr/bin/perl

$base="/Builds/R-builds/nightly";

$dbase="$base/deploy";

@rds=`cat $dbase/builds`;
foreach(@rds) { s/[\r\n]+//g; };

$dv=`uname -r`; $dv=$1 if ($dv=~/^([0-9]+)\./);

if ($dv == 8) {
    @archs=@pf=("i386","ppc");
    $os="tiger";
} elsif ($dv == 9) {
    @archs=@pf=("i386","ppc","x86_64","ppc64");
    $os="leopard";
} else {
    print STDERR "** ERROR: unsupported OS version $dv\n\n";
    exit 1;
}

open OUT, ">$base/web/R-builds.html";
#print "<h1>R Mac OS X nightly builds</h1>\n";
#print "<h2>R framework</h2>\n";
print OUT "<table bgcolor=#ffffe0 border=0 cellspacing=0 cellpadding=3><tr bgcolor=#c8c8ff><th>Build</th><th>OS</th><th>Date</th><th>Status</th><th>Download</th></tr>\n";

foreach $rd (@rds) {
    if ($trc eq '') { $trc=" bgcolor=#ffffa0"; } else { $trc=''; };
    undef @rv;
    if ( -e "$dbase/$os/$rd/universal/$rd-$os-universal.tar.gz" )  {
	@rv=`tar fxzO $dbase/$os/$rd/universal/$rd-$os-universal.tar.gz Library/Frameworks/R.framework/Versions/*/Resources/bin/R|grep version=|sed -e 's|.\\{0,\\}version="||'`;
    }
    $ver=$rv[0]; $ver=~s/\.$//;
    $ver=~s/development /development<br>/;
    $rl1="<tr valign=bottom$trc><td><b>$rd</b><br>$ver</td><td>$os</td>";
    $rl='';
    $lkf='';
    $dl='';
    foreach (@pf) {
	$rl.="<b>$_</b>: ";
	if (-e "$dbase/$os/$rd/$_/SUCCESS") {
	    $rl.="OK (<a href=\"log-$rd.$os.$_.html\">log</a>)<br>"; $lkf="$dbase/$os/$rd/$_/SUCCESS";
	} elsif (-e "$dbase/$os/$rd/$_/FAILED") {
	    $sf=`cat $dbase/$os/$rd/$_/FAILED`;
	    $bl=`cat $dbase/$os/$rd/$_/build.log`;
	    $rl.="FAILED: $sf (<a href=\"log-$rd.$os.$_.html\">log</a>)<br>";
	    $lkf="$dbase/$os/$rd/$_/FAILED";
	} else {
	    $rl.="MISSING<br>";
	}
    }
    $rl.="<b>universal</b>: ";
    if (-e "$dbase/$os/$rd/universal/SUCCESS") {
	$rl.="OK<br>";
	$lkf="$dbase/$os/$rd/universal/SUCCESS";
	if (-e "$dbase/$os/$rd/universal/$rd-$os-universal.tar.gz") {
	    $sz=`ls -lh $dbase/$os/$rd/universal/$rd-$os-universal.tar.gz|awk '{print \$5}'`;
	    chop $sz;
	    $dl="<a href=$rd-$os-universal.tar.gz>$rd-$os-universal.tar.gz</a> (${sz}b)";
	}
	$dmg=`ls $dbase/$os/$rd/universal/$rd-*.dmg 2>/dev/null|sort|tail -n 1`; chop $dmg;
	if ($dmg ne '' && (-e $dmg)) {
	    $sz=`ls -lh $dmg|awk '{print \$5}'`;
	    $dmg=`basename \"$dmg\"`; chop $dmg;
	    chop $sz;
	    $dl.="<br><a href=$dmg>$dmg</a> (${sz}b, installer incl. GUI)";
	}
    } elsif (-e "$dbase/$os/$rd/universal/FAILED") {
	$sf=`cat $dbase/$os/$rd/universal/FAILED`;
	$rl.="FAILED: $sf<br>";
	$lkf="$dbase/$os/$rd/universal/FAILED";
    } else {
	$rl.="MISSING<br>";
    }
    $lkd='';
    $lkd=`ls -l "$lkf" |awk '{print \$6,\$7,\$8}'` if ($lkf ne '');
    chop $lkd;

    $logs='';

    @suff=('check','conf','build');
    foreach $a (@archs) {
	open LOUT, ">$base/web/log-$rd.$os.$a.html";
	print LOUT "<h2>$rd, $os, $a</h2>";
	foreach(@suff) { print LOUT "<a href=#$_>$_</a>&nbsp;&nbsp;&nbsp;"; };
	print LOUT "<hr><table bgcolor=#ffffe0 border=0 cellspacing=0 cellpadding=3>";
	foreach $pf (@suff) {
	    $fc=($pf=~/err$/)?"#c00000":"#0000c0";
	    $da=`stat $dbase/$os/$rd/$a/$pf 2>/dev/null`; $da=~s/\".*?\"//; $da=$1 if ($da=~/\"(.*?)\"/);
	    print LOUT "<tr bgcolor=#c8c8ff><td><a name=\"$pf\"></a><b>$pf</b> - <b><i>$da</i></b></td></tr><tr><td><font color=$fc><pre>";
	    open INA, "$dbase/$os/$rd/$a/$pf"; while(<INA>) {
		#s/</&lt;/g;
		#s/>/&gt;/g;
		s/\#\@1\@\#/<font color=navy>/g;
		s/\#\@2\@\#/<font color=red>/g;
		s/\@\#.\#\@/<\/font>/g;
		print LOUT $_;
	    }; close INA;
	    print LOUT "</pre></font></td></tr>\n";
	}
	print LOUT "</table>";
	close LOUT;
    }
    $rl="$rl1<td>$lkd</td><td>$rl</td><td>$dl</td></tr>\n";
    print OUT $rl;
}

print OUT "</table>\n";
close OUT;

open OUT, ">$base/web/GUI.html";
print OUT "<table bgcolor=#ffffe0 border=0 cellspacing=0 cellpadding=3><tr bgcolor=#c8c8ff><th>Version</th><th>Build</th><th>Download</th></tr>";

$trc='';
@gi=`ls $dbase/$os/*/universal/R-GUI-*.dmg`;
foreach(@gi) { s/[\r\n]+//g; s/.dmg$//i; s/^.*\///; $gui{$_}++; };
foreach(sort(keys(%gui))) {
    $rl='';
    if ($trc eq '') { $trc=" bgcolor=#ffffa0"; } else { $trc=''; };
    if (/GUI-(\d+)-(\d+\.\d+)-(.*)/) {
	$rl="<tr valign=top$trc><td>Mac OS X GUI rev. $1 for R $2.x</td><td>$3</td><td><a href=$_.dmg>$_.dmg</a></td></tr>\n";
    }
    print OUT $rl;
}

print OUT "</table>\n";
close OUT;

sub fetch { my($a); $a=''; open INF,"$base/web/$_[0]"; while(<INF>) { $a.=$_; }; close INF; $a; };

open IN, "$base/web/index.in.html";
open OUT, ">$base/web/index.html";
while(<IN>) {
    s/<!--include (.*?)-->/fetch($1)/ge;
    print OUT $_;
}
close IN;
close OUT;
