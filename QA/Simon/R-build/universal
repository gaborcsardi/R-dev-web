#!/bin/sh

if [ x$1 == x-h -o x$1 == x--help ]; then
    echo ""
    echo " universal [<R-dir>]"
    echo ""
    echo " settings:"
    echo " RDIRS     - directories to build R from (if R-dir is not specified)"
    echo "             defaults to the contents of \$BASE/builds"
    echo ""
    exit 0;
fi

if [ -n "$1" ]; then
    RDIRS=$1
fi

: ${BASE=/Builds/R-builds/nightly}
: ${RDIRS=`cat $BASE/builds`}

RBUILDS=$BASE

. $BASE/common

TNAME="$oscode-universal"

mkdir -p $BASE/$TNAME

if [ -z "${QUAD}" ]; then
    defarchs="ppc i386"
else
    defarchs="ppc64 x86_64 ppc i386"
fi
: ${tarchs="${defarchs}"}

TS=`date +%s:%Y%m%d:%H%M%S`
for RD in $RDIRS; do
    rm -f $BASE/$TNAME/$RD.SUCCESS $BASE/$TNAME/$RD.FAILED
    miss=no
    for tarch in $tarchs; do	
	if [ -e "$BASE/$oscode-$tarch/$RD-$oscode-$tarch-bld.tar.gz" -a -e "$BASE/$oscode-$tarch/$RD.SUCCESS" ]; then
	    echo "$TS:$RD:common:collect:0:$oscode-$tarch" >> $BASE/$TNAME/build.log
	else
	    echo "Missing build result for $RD-$oscode-$tarch" >&2
	    echo "Missing build result for $RD-$oscode-$tarch" >> $BASE/$TNAME/$RD.FAILED
	    echo "$TS:$RD:common:collect:1:$oscode-$tarch" >> $BASE/$TNAME/build.log
	    miss=yes
	fi
    done

    if [ $miss = no ]; then
	failed=no
	echo "Remove previous framework ..."
	rm -rf /Library/Frameworks/R.framework 
	RFWH=/Library/Frameworks/R.framework/Resources
	for tarch in $tarchs; do
	    ATNAME="$oscode-$tarch"

	    echo "$RD:$ATNAME"
	    cd $BASE/$ATNAME/$RD
	    TS=`date +%s:%Y%m%d:%H%M%S`
	    echo "$TS:$RD:$tarch:install" >> $BASE/$TNAME/build.log
	    R_ARCH=/$tarch make install > $BASE/$TNAME/$RD.$tarch.inst 2> $BASE/$TNAME/$RD.$tarch.inst.err
	    CR=$?
	    if [ $CR != 0 ]; then
		failed=yes
		echo "make install falied for $tarch"
		echo "make install falied for $tarch" >> $BASE/$TNAME/$RD.FAILED
	    fi
	    # Rscript will be overwritten each time, so move it into exec
	    if [ -e "$RFWH/bin/Rscript" -a -e "$RFWH/bin/exec/$tarch" ]; then
		mv "$RFWH/bin/Rscript" "$RFWH/bin/exec/$tarch/Rscript"
	    fi
	    TS=`date +%s:%Y%m%d:%H%M%S`
	    echo "$TS:$RD:$tarch:install:$CR" >> $BASE/$TNAME/build.log	
	done

	if [ $failed = no ]; then
            # fixup permissions (first run to make sure it's writable)
	    $BASE/fixup

	    # create fat Rscript (if necessary)
	    if [ ! -e "$RFWH/bin/Rscript" ]; then
		lipo -create $RFWH/bin/exec/*/Rscript -o "$RFWH/bin/Rscript"
	    fi

	    # determine full path to lib (via id entry in libR)
	    LIBDIR=`otool -L /Library/Frameworks/R.framework/R | sed -n '/\/libR/s/.*\(\/Library.*\)\/libR.dylib.*/\1/p'`
	    # fix libRblas entry in bin/exec/<arch>/R  (I still don't know why it's screwed...)
	    for a in ppc i386; do
		install_name_tool -change libRblas.dylib "${LIBDIR}/libRblas.dylib" /Library/Frameworks/R.framework/Resources/bin/exec/$a/R
	    done

	    # remove superfluous Makeconf
	    rm -f /Library/Frameworks/R.framework/Resources/bin/etc/Makeconf

	    # make CRAN changes to the shell script - setting R_ARCH default according to `arch` 
	    #patch /Library/Frameworks/R.framework/Resources/bin/R < $BASE/R.sh.diff

            # move readline into R and fixup the ld path
	    rllib=`ls /usr/local/lib/libreadline.?.?.dylib|tail -n 1`
	    rllib=`basename ${rllib}`
	    cp /usr/local/lib/${rllib} "$LIBDIR/"
	    chmod +w "$LIBDIR/"* 2> /dev/null
	    install_name_tool -change /usr/local/lib/${rllib} "$LIBDIR/${rllib}" "$LIBDIR/libR.dylib"
	    ln -s ${rllib} "$LIBDIR/libreadline.dylib"
    
	    # replace singe-arch dylibs with softlinks to corresponding fat library
	    for l in "$LIBDIR/"*/*.dylib; do
		lname=`basename "$l"`
		if [ -e "`dirname "$l"`/../$lname" ]; then
		    ln -sf ../$lname $l
		fi
	    done

	    # copy vecLib version of BLAS
	    cp $BASE/libRblas.vecLib.dylib "${LIBDIR}/libRblas.vecLib.dylib"
	    chmod 0775 "${LIBDIR}/libRblas.vecLib.dylib"
	    install_name_tool -id "${LIBDIR}/libRblas.dylib" "${LIBDIR}/libRblas.dylib"

	    # CONTROVERSIAL!! ARF!! FIXME!! We use this common copy of libRblas as the default -
	    # even though it's never been tested! Bad, bad, bad, ...
	    if [ -L "${LIBDIR}/libRblas.dylib" ]; then
		rm -f "${LIBDIR}/libRblas.dylib"
	    fi
	    if [ -e "${LIBDIR}/libRblas.dylib" ]; then
		mv "${LIBDIR}/libRblas.dylib" "${LIBDIR}/libRblas.0.dylib"
	    fi
	    ln -s libRblas.vecLib.dylib "${LIBDIR}/libRblas.dylib"

	    ARHOME=`dirname "$LIBDIR"`
	    $BASE/fixpathR "$ARHOME"

            # fixup permissions
	    $BASE/fixup
	    install_name_tool -id "${LIBDIR}/libRblas.dylib" "${LIBDIR}/libRblas.dylib"
	    $BASE/fixup
	    cd /
	    tar fcz $BASE/$RD-$TNAME.tar.gz /Library/Frameworks/R.framework
	    cd $BASE

	    echo "SUCCESS"
	    touch $BASE/$TNAME/$RD.SUCCESS
	fi
    fi
done
