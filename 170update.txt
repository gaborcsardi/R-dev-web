Updating packages for 1.7.0
===========================

Package maintainers should be aware of the following changes scheduled
to appear in 1.7.0.  The `methods' package is attached by default, and
the behaviour is now intended to be as far as possible the same
whether or not `methods' is attached.


Current generic functions that call, say, UseMethod("abc") may behave
differently if there are functions named, for example, abc.matrix,
abc.numeric, abc.character, etc.  Because matrices have class
"matrix", the function abc.matrix will be treated as a method for
function abc() when the first argument is a matrix.  You will need to
rename the function, for example to abcMatrix instead of abc.matrix.
This applies also if you have a function named in this way for one of
the generic functions in base or another required package: for
example, plot.matrix would be interpreted as a plot method for matrix
objects.


print.matrix() only exists for backwards compatibility: it is the same
as print.default().  Very likely print.matrix was used for the
right=TRUE argument that S's print.default does not have, but this is
unnecessary.  If you want the call sequence of print.matrix, use prmatrix
instead.  Also, note that print(.default) prints the attributes of the matrix 
whereas prmatrix does not.


Constructions that used is.null(class(x)) will probably not work as
intended, as all objects now have a class. The construction

	 if(is.null(class(x))) class(x) <- data.class(x)
	 UseMethod("foo")

can be replaced by

	 if(is.null(oldClass(x))) class(x) <- data.class(x)
	 UseMethod("foo")

if it is intended to blur the distinction between "integer" and
"numeric" classes, and otherwise the first line may be omitted.  (The
only distinction between the class given by data.class() and that
given by class() and used for dispatch by UseMethod is that
data.class() reports "numeric" for integer vectors.)


Unless the package makes use of setMethod (methods), loading can be
speeded up by having an object called .noGenerics (with any value) in
the package.
