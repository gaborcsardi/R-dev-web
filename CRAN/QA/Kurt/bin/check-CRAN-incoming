#! /usr/bin/Rscript
### -*- R -*-

R_scripts_dir <- normalizePath(file.path("~", "lib", "R", "Scripts"))

flavor <- "clang"

args <- commandArgs(trailingOnly = TRUE)

## <FIXME>
## It would be more consistent with the other command line arguments to
## use -f=FLAVOR [but then R-d() and Rconf should be changed accordingly
## as well].
## Once decided, document the -f option in 'check_CRAN_incoming.R'.
## </FIXME>

if(any(ind <- grepl("^-f.+", args))) {
    flavor <- if(substring(args[ind][1L], 3L, 3L) == "g")
        "gcc"
    else
        "clang"
    args <- args[!ind]
}

R_exe <- normalizePath(file.path("~", "tmp",
                                 sprintf("R-d-%s", flavor),
                                 "bin", "R"))

## <FIXME>
## Maybe change to -x?
pos <- which(args == "--exe")
if(length(pos)) {
    R_exe <- normalizePath(args[pos + 1L])
    args <- args[-c(pos, pos + 1L)]
    flavor <- NULL
}
## </FIXME>

## Avoid 'WARNING: ignoring environment value of R_HOME' ...
Sys.unsetenv("R_HOME")
## Make sure that R_LIBS and R_LIBS_SITE are not set.
Sys.unsetenv(c("R_LIBS", "R_LIBS_SITE"))
## Re-set R_LIBS_USER to force re-expansion
Sys.setenv("R_LIBS_USER" =
           file.path(Sys.getenv("HOME"), "lib/R/Library/%v/%a-%o"))
## Set R_MAKEVARS_USER according to flavor.
if(!is.null(flavor))
    Sys.setenv("R_MAKEVARS_USER" =
               file.path(Sys.getenv("HOME"),
                         ".R",
                         sprintf("Makevars-%s", flavor)))

system2(R_exe,
        c("--no-save", "--no-restore", "--slave",
          "--args", args),
        stdin = file.path(R_scripts_dir, "check_CRAN_incoming.R"))
